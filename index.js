import puppeteer from 'puppeteer';
import fetch from 'node-fetch';
import path from 'path';
import fs from 'fs';
import os from 'os';
import { saveHtmlForDebug, cleanupOldHtmlFiles } from '../../../utils/htmlDebugger.js';

// Webshare API configuration
const WEBSHARE_API_KEY = 'qf8qedpyxethbo8qjdhiol5r4js7lm8jmcs59pkf';

// üîß [CITY] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫—É–∫
const CITY_CONFIG = {
  enabled: true,
  representId: 1,  // ID –Ω—É–∂–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
  representType: 'common'  // ‚Üê –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 'common', –∞ –Ω–µ 'city'
};

// Proxy management state - from proxyManager.js
let proxies = [];
let currentProxyIndex = 0;
let proxyFailures = {};
let proxyUsageCounts = {};
let lastProxyFetch = 0;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å city representation –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ URL
const shouldSkipCityRepresentation = (url) => {
  // –°–ø–∏—Å–æ–∫ URL –ø–∞—Ç–µ—Ä–Ω–æ–≤, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å city representation
  const skipPatterns = [
    '/xpvnsulc/', // –∑–∞—â–∏—Ç–∞ –æ—Ç –±–æ—Ç–æ–≤
    'captcha',
    'security-check',
    'challenge'
  ];
  
  return skipPatterns.some(pattern => url.includes(pattern));
};

// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å city representation –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫—É–∫ –≥–æ—Ä–æ–¥–∞
const transformUrlWithCityRepresentation = (originalUrl, cityId = CITY_CONFIG.representId) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º city representation –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö URLs
  if (shouldSkipCityRepresentation(originalUrl)) {
    logDebug(`üè† [CITY] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º city representation –¥–ª—è URL —Å –∑–∞—â–∏—Ç–æ–π: ${abbreviateUrl(originalUrl)}`);
    return originalUrl;
  }
  
  // –¢–æ–ª—å–∫–æ –¥–ª—è vseinstrumenti.ru URLs –∏ –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞
  if (!originalUrl.includes('vseinstrumenti.ru') || !CITY_CONFIG.enabled) {
    logDebug(`üè† [CITY] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º city representation: –Ω–µ vseinstrumenti.ru –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ`);
    return originalUrl;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ representation –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (originalUrl.includes('represent/change')) {
    logDebug(`üè† [CITY] URL —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç represent/change, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å`);
    return originalUrl;
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω (—Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º)
    const urlObj = new URL(originalUrl);
    const domain = `${urlObj.protocol}//${urlObj.hostname}`;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π URL —Å city representation
    const cityRepresentUrl = `${domain}/represent/change/?represent_id=${cityId}&represent_type=${CITY_CONFIG.representType}&url_to_redirect=${encodeURIComponent(originalUrl)}`;
    
    logDebug(`üè† [CITY] === –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï CITY REPRESENTATION URL ===`);
    logDebug(`üè† [CITY] –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL: ${originalUrl}`);
    logDebug(`üè† [CITY] –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL: ${encodeURIComponent(originalUrl)}`);
    logDebug(`üè† [CITY] –ì–æ—Ä–æ–¥ ID: ${cityId}, –¢–∏–ø: ${CITY_CONFIG.representType}`);
    logDebug(`üè† [CITY] –ò—Ç–æ–≥–æ–≤—ã–π represent URL: ${cityRepresentUrl}`);
    logDebug(`üè† [CITY] ===============================================`);
    
    return cityRepresentUrl;
  } catch (error) {
    logDebug(`üè† [CITY] –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è city representation URL: ${error.message}`);
    return originalUrl;
  }
};

// Helper function to get a valid screenshot path that works on Windows and Linux
function getScreenshotPath(filename) {
  // Use the system temp directory which exists on all platforms
  const tempDir = os.tmpdir();
  const screenshotDir = path.join(tempDir, 'vsem-screenshots');
  
  // Create the screenshot directory if it doesn't exist
  try {
    if (!fs.existsSync(screenshotDir)) {
      fs.mkdirSync(screenshotDir, { recursive: true });
      logDebug(`Created screenshot directory: ${screenshotDir}`);
    }
  } catch (error) {
    logDebug(`Failed to create screenshot directory: ${error.message}`);
    // Fall back to temp dir if creating subdirectory fails
    return path.join(tempDir, filename);
  }
  
  return path.join(screenshotDir, filename);
}

// Function to extract product data from page - FAST and RELIABLE approach
const extractProductData = async (page, earlyPageTitle = null) => {
  try {
    logDebug('üöÄ [EXTRACT] Starting FAST product data extraction');
    
    // *** –®–ê–ì 1: –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ù–ê –ó–ê–©–ò–¢–£/–û–®–ò–ë–ö–£ ***
    logDebug('üìã [EXTRACT] –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    const pageTitle = earlyPageTitle || await page.evaluate(() => document.title);
    logDebug(`üìÑ [EXTRACT] Page title: "${pageTitle}"`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–æ–∫/–∑–∞—â–∏—Ç—ã
    if (pageTitle) {
      logDebug('üîç [EXTRACT] –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–æ–∫...');
      const errorIndicators = [
        '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
        'Page Not Found', 
        '404', '403', '500',
        '–û—à–∏–±–∫–∞', 'Error',
        'Forbidden', '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
        'Captcha', 'Security Check',
        'DDoS Protection'
      ];
      
      for (const indicator of errorIndicators) {
        if (pageTitle.includes(indicator)) {
          logDebug(`‚ùå [EXTRACT] –ù–∞–π–¥–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏: "${indicator}" –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ`);
          throw new Error(`üõ°Ô∏è –ó–∞—â–∏—Ç–∞/–æ—à–∏–±–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: "${pageTitle}"`);
        }
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ–±—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∞–π—Ç–∞ (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é)
      if (pageTitle.trim() === '–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É' || 
          pageTitle.includes('–ì–ª–∞–≤–Ω–∞—è - –í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É')) {
        logDebug(`üè† [EXTRACT] –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É`);
        throw new Error(`üè† –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: "${pageTitle}"`);
      }
      
      logDebug('‚úÖ [EXTRACT] –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –æ—à–∏–±–∫–∏');
    }
    
    // *** –®–ê–ì 2: –ë–´–°–¢–†–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –° –ö–û–ù–ö–†–ï–¢–ù–´–ú–ò –°–ï–õ–ï–ö–¢–û–†–ê–ú–ò ***
    logDebug('‚ö° [EXTRACT] –®–∞–≥ 2: –ë—ã—Å—Ç—Ä–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    logDebug('‚è∞ [EXTRACT] –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (1000ms)...');
    await new Promise(resolve => setTimeout(resolve, 1000));
    logDebug('‚úÖ [EXTRACT] –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
    logDebug('üîç [EXTRACT] –í—ã–ø–æ–ª–Ω—è–µ–º page.evaluate() –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    const productData = await page.evaluate(() => {
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
      const data = {};
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      data.debugInfo = {};
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ document —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!document) {
        throw new Error('Document –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
      }
      
      try {
        // 1. –ù–ê–ó–í–ê–ù–ò–ï - –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ H1 –∏–ª–∏ title
        const h1Element = document.querySelector('h1[data-qa="get-product-title"]') ||
                          document.querySelector('h1.product__title') ||
                          document.querySelector('h1');
        
        if (h1Element && h1Element.textContent.trim()) {
          data.name = h1Element.textContent.trim();
        } else {
          // Fallback –∫ title —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          const title = document.title;
          if (title && title.length > 10) {
            data.name = title
              .replace(/\s*-\s*–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\.—Ä—É.*$/i, '')
              .replace(/\s*-\s*–≤—ã–≥–æ–¥–Ω–∞—è —Ü–µ–Ω–∞.*$/i, '')
              .replace(/\s*-\s*–∫—É–ø–∏—Ç—å.*$/i, '')
              .trim();
          }
        }
        
        // 2. –¶–ï–ù–ê - –∏–∑ meta-—Ç–µ–≥–∞ –∏–ª–∏ DOM
        const priceMeta = document.querySelector('meta[itemprop="price"]');
        if (priceMeta && priceMeta.getAttribute('content')) {
          const priceValue = parseFloat(priceMeta.getAttribute('content'));
          if (!isNaN(priceValue) && priceValue > 0) {
            data.price = priceValue;
          }
        }
        
        // Fallback –ø–æ–∏—Å–∫ —Ü–µ–Ω—ã –≤ DOM
        if (!data.price) {
          const priceSelectors = [
            // –ù–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è vseinstrumenti.ru
            '[data-qa="price-now"]',
            '[data-behavior="price-now"]',
            '.N2sK2A [data-qa="price-now"]',
            '.N2sK2A [data-behavior="price-now"]',
            '._typography_snzga_46._heading_snzga_7[data-qa="price-now"]',
            
            // –°—Ç–∞—Ä—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
            '[data-qa="product-price"] .typography',
            '[data-qa="product-price-current"]',
            '.current-price',
            '.price-current',
            '.price-value'
          ];
          
          for (const selector of priceSelectors) {
            const priceEl = document.querySelector(selector);
            if (priceEl) {
              // –ü–æ–ª—É—á–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
              let priceText = priceEl.textContent || priceEl.innerText || '';
              // –ó–∞–º–µ–Ω—è–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã (\u00A0) –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
              priceText = priceText.replace(/\u00A0/g, ' ');
              // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
              priceText = priceText.replace(/\s+/g, ' ').trim();
              
              console.log(`üîç Checking price from "${selector}": "${priceText}"`);
              
              // –ò—â–µ–º —á–∏—Å–ª–∞ –≤ —Ç–µ–∫—Å—Ç–µ (–≤–∫–ª—é—á–∞—è –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã)
              const priceMatch = priceText.match(/\d[\d\s\u00A0]*\d|\d+/);
              if (priceMatch) {
                const cleanedPrice = priceMatch[0].replace(/[\s\u00A0]+/g, '').replace(',', '.');
                const price = parseFloat(cleanedPrice);
                if (!isNaN(price) && price > 0) {
                  console.log(`‚úÖ Found price: ${price}`);
                  data.price = price;
                  break;
                }
              }
            }
          }
        }
        
        // 3. –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï - –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
        const imageSelectors = [
          '.product-page-image__img',
          '.product-img img',
          '.product-gallery__image',
          '[data-qa="product-image"] img'
        ];
        
        for (const selector of imageSelectors) {
          const imgEl = document.querySelector(selector);
          if (imgEl && imgEl.src) {
            data.imageUrl = imgEl.src;
            break;
          }
        }
        
        // Fallback –∫ meta og:image
        if (!data.imageUrl) {
          const metaOg = document.querySelector('meta[property="og:image"]');
          if (metaOg) {
            data.imageUrl = metaOg.getAttribute('content');
          }
        }
        
        // 4. –ö–û–õ–ò–ß–ï–°–¢–í–û/–ù–ê–õ–ò–ß–ò–ï - –∏–∑ –∫–Ω–æ–ø–∫–∏ "–í –∫–æ—Ä–∑–∏–Ω—É" –∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞–ª–∏—á–∏—è
        let addToCartBtn = document.querySelector('[data-qa="product-add-to-cart-button"]') ||
                           document.querySelector('button[title="–í –∫–æ—Ä–∑–∏–Ω—É"]') ||
                           document.querySelector('.add-to-cart') ||
                           document.querySelector('.OnnEZB button') ||
                           document.querySelector('[class*="add-to-cart"]') ||
                           document.querySelector('[class*="buy-button"]') ||
                           document.querySelector('button[data-qa*="add-to-cart"]') ||
                           document.querySelector('button[data-qa*="buy"]');
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏
        if (!addToCartBtn) {
          const allButtons = document.querySelectorAll('button');
          for (const btn of allButtons) {
            const btnText = btn.textContent.toLowerCase().trim();
            if (btnText.includes('–≤ –∫–æ—Ä–∑–∏–Ω—É') || 
                btnText.includes('–∫—É–ø–∏—Ç—å') || 
                btnText.includes('–∑–∞–∫–∞–∑–∞—Ç—å') ||
                btnText.includes('–¥–æ–±–∞–≤–∏—Ç—å')) {
              addToCartBtn = btn;
              break;
            }
          }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        data.debugInfo.addToCartBtn = !!addToCartBtn;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        const allButtons = document.querySelectorAll('button');
        data.debugInfo.totalButtons = allButtons.length;
        data.debugInfo.buttonTexts = Array.from(allButtons)
          .slice(0, 10) // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 10 –∫–Ω–æ–ø–æ–∫
          .map(btn => btn.textContent.trim().substring(0, 50));
        
        if (addToCartBtn) {
          data.debugInfo.btnDisabled = addToCartBtn.disabled;
          data.debugInfo.btnHasDisabledClass = addToCartBtn.classList.contains('disabled');
          data.debugInfo.btnText = addToCartBtn.textContent.trim();
          data.debugInfo.btnOuterHTML = addToCartBtn.outerHTML.substring(0, 200);
        }
        
        if (addToCartBtn && !addToCartBtn.disabled && !addToCartBtn.classList.contains('disabled')) {
          data.availability = 'in_stock';
          
          // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
          const availabilityEl = document.querySelector('[data-qa="availability-info"]');
          if (availabilityEl) {
            const quantityText = availabilityEl.textContent;
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞–ª–∏—á–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            data.debugInfo.availabilityText = quantityText;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            let quantity = null;
            
            // 1. –¢–æ—á–Ω–æ–µ —á–∏—Å–ª–æ: "351 —à—Ç"
            let exactMatch = quantityText.match(/(\d+)\s*—à—Ç/);
            if (exactMatch) {
              quantity = parseInt(exactMatch[1]);
            }
            
            // 2. –ë–æ–ª—å—à–µ —á–∏—Å–ª–∞: "> 100 —à—Ç", "–±–æ–ª–µ–µ 100 —à—Ç"
            if (!quantity) {
              let moreMatch = quantityText.match(/[>–±–æ–ª—å—à–µ|–±–æ–ª–µ–µ]\s*(\d+)\s*—à—Ç/i);
              if (moreMatch) {
                quantity = parseInt(moreMatch[1]); // –ë–µ—Ä—ë–º –±–∞–∑–æ–≤–æ–µ —á–∏—Å–ª–æ
              }
            }
            
            if (quantity !== null) {
              data.quantity = quantity;
            } else {
              // –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –ø–∞—Ä—Å–∏—Ç—å —á–∏—Å–ª–æ - –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ "–≤ –Ω–∞–ª–∏—á–∏–∏"
              data.quantity = 1; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
            }
          } else {
            data.quantity = 1; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
          }
        } else {
          data.availability = 'out_of_stock';
          data.quantity = 0;
        }
        
        return data;
        
      } catch (evalError) {
        throw new Error(`–û—à–∏–±–∫–∞ –≤ page.evaluate: ${evalError.message}`);
      }
    });
    
    logDebug('‚úÖ [EXTRACT] page.evaluate() —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
    logDebug(`üìä [EXTRACT] –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: name="${productData.name}", price=${productData.price}, availability=${productData.availability}`);
    
    return productData;
    
  } catch (error) {
    logDebug(`‚ùå [EXTRACT] –û—à–∏–±–∫–∞ –≤ extractProductData: ${error.message}`);
    logDebug(`üîç [EXTRACT] Stack trace: ${error.stack}`);
    throw error;
  }
};

// Add timestamp to debug logs
function logDebug(message) {
  const timestamp = new Date().toISOString();
  console.log(`[${timestamp}] Debug - ${message}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function isDataQualityGood(productData) {
  if (!productData) {
    logDebug('‚ùå –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ');
    return false;
  }
  
  const { name, price, imageUrl, quantity } = productData;
  
  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  if (!name || name.length < 5) {
    logDebug(`‚ùå –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ "${name}"`);
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
  const invalidNames = ['–≥–ª–∞–≤–Ω–∞—è', 'home', '–∫–∞—Ç–∞–ª–æ–≥', 'catalog', '–º–µ–Ω—é', 'menu'];
  const isMainPageTitle = name.includes('–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É - –æ–Ω–ª–∞–π–Ω-–≥–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç') || 
                         name.includes('–¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –∏ –±–∏–∑–Ω–µ—Å–∞') ||
                         name === '–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É';
  
  if (invalidNames.some(invalid => name.toLowerCase().includes(invalid)) || isMainPageTitle) {
    logDebug(`‚ùå –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –Ω–∞–∑–≤–∞–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π "${name}"`);
    return false;
  }
  
  // –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏–º–µ—Ç—å —Ö–æ—Ç—è –±—ã —Ü–µ–Ω—É, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏–ª–∏ –±—Ä–µ–Ω–¥
  const hasPrice = price && price > 0;
  const hasImage = (imageUrl && imageUrl.length > 10) || (productData.imageUrl && productData.imageUrl.length > 10);
  const hasQuantity = quantity !== null && quantity !== undefined;
  const hasBrand = productData.brand && productData.brand.length > 0;
  
  const scoreCount = [hasPrice, hasImage, hasQuantity, hasBrand].filter(Boolean).length;
  
  // *** –£–°–ò–õ–ï–ù–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø: –ï—Å–ª–∏ –º–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–º–æ–∂–Ω–æ –º—ã –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ ***
  if (scoreCount >= 2) {
    logDebug(`‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –æ—Ç–ª–∏—á–Ω–æ–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ + ${scoreCount} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π)`);
    return true;
  } else if (scoreCount === 1) {
    logDebug(`‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: —Å—Ä–µ–¥–Ω–µ–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ + ${scoreCount} –ø–æ–ª–µ) - –≤–æ–∑–º–æ–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç`);
    return false; // –¢–µ–ø–µ—Ä—å —Ç—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º—É–º 2 –ø–æ–ª—è
  } else {
    logDebug(`‚ùå –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: –ø–ª–æ—Ö–æ–µ (—Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ) - –≤–µ—Ä–æ—è—Ç–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é`);
    return false;
  }
}

// Fetch proxies from Webshare.io API - corrected to handle the actual API response structure
async function fetchProxies() {
  try {
    logDebug('Fetching proxies from Webshare.io API...');
    
    const apiUrl = 'https://proxy.webshare.io/api/proxy/list/';
    
    logDebug(`API URL: ${apiUrl}`);
    logDebug(`API Key length: ${WEBSHARE_API_KEY ? WEBSHARE_API_KEY.length : 0} chars`);
    
    const response = await fetch(apiUrl, {
      headers: {
        'Authorization': `Token ${WEBSHARE_API_KEY}`
      }
    });
    
    if (!response.ok) {
      const errorMsg = `API responded with status ${response.status}`;
      const responseText = await response.text();
      logDebug(`Proxy API error: ${errorMsg}`);
      logDebug(`Response body: ${responseText.substring(0, 200)}...`);
      return [];
    }
    
    const data = await response.json();
    
    proxies = (data.results || []).map(proxy => {
      const port = proxy.ports && proxy.ports.http ? proxy.ports.http : 0;
      
      return {
        host: proxy.proxy_address || '',
        port: port,
        username: proxy.username || '',
        password: proxy.password || '',
        failed: false,
        lastUsed: null
      };
    });
    
    proxies = proxies.filter(p => p.host && p.port > 0 && p.username && p.password);
    
    logDebug(`Successfully fetched ${proxies.length} valid proxies from Webshare.io`);
    lastProxyFetch = Date.now();
    
    return proxies;
  } catch (error) {
    logDebug(`PROXY ERROR: ${error.message}`);
    logDebug(`Error stack: ${error.stack}`);
    return [];
  }
}

// Get next working proxy with better logging
async function getNextWorkingProxy() {
  logDebug('Getting next working proxy');
  
  if (proxies.length === 0) {
    await fetchProxies();
    if (proxies.length === 0) {
      logDebug('No proxies available');
      return null;
    }
  }
  
  let attempts = 0;
  const maxAttempts = proxies.length;
  
  while (attempts < maxAttempts) {
    if (currentProxyIndex >= proxies.length) {
      currentProxyIndex = 0;
    }
    
    const proxy = proxies[currentProxyIndex];
    currentProxyIndex++;
    attempts++;
    
    if (!proxy.failed) {
      proxy.lastUsed = Date.now();
      logDebug(`Selected proxy: ${proxy.host}:${proxy.port} with auth ${proxy.username}:***`);
      
      if (!proxy.host || !proxy.port || !proxy.username || !proxy.password) {
        logDebug(`Invalid proxy configuration: ${JSON.stringify({
          hasHost: !!proxy.host,
          hasPort: !!proxy.port,
          hasUsername: !!proxy.username,
          hasPassword: !!proxy.password
        })}`);
        proxy.failed = true;
        continue;
      }
      
      return proxy;
    }
  }
  
  logDebug('All proxies have failed, resetting failure status');
  proxies.forEach(proxy => {
    proxy.failed = false;
  });
  
  const firstProxy = proxies[0];
  if (firstProxy) {
    firstProxy.lastUsed = Date.now();
    logDebug(`Reset all proxies, using: ${firstProxy.host}:${firstProxy.port}`);
    return firstProxy;
  }
  
  logDebug('No valid proxies found even after reset');
  return null;
}

// Test if a proxy works with example.org
async function testProxy(proxy) {
  try {
    if (!proxy || !proxy.host || !proxy.port) {
      logDebug(`Invalid proxy configuration: ${JSON.stringify(proxy)}`);
      return false;
    }
    
    logDebug(`Testing proxy ${proxy.host}:${proxy.port}`);
    
    const browser = await puppeteer.launch({
      headless: 'new',
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--disable-dev-shm-usage',
        `--proxy-server=${proxy.host}:${proxy.port}`
      ]
    });
    
    try {
      const page = await browser.newPage();
      
      await page.authenticate({
        username: proxy.username,
        password: proxy.password
      });
      
      logDebug(`Authenticated with proxy ${proxy.host}:${proxy.port}`);
      
      const response = await page.goto('https://example.org', { 
        waitUntil: 'domcontentloaded',
        timeout: 30000  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º timeout –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏
      });
      
      const status = response.status();
      const isSuccess = status === 200;
      
      logDebug(`Proxy test ${isSuccess ? 'successful' : 'failed'}: ${proxy.host}:${proxy.port} (status: ${status})`);
      return isSuccess;
    } finally {
      await browser.close();
    }
  } catch (error) {
    logDebug(`Proxy test failed for ${proxy.host}:${proxy.port}: ${error.message}`);
    markProxyAsFailed(proxy);
    return false;
  }
}

// Mark a proxy as failed
function markProxyAsFailed(proxy) {
  if (!proxy) return;
  
  proxy.failed = true;
  logDebug(`Marked proxy ${proxy.host}:${proxy.port} as failed`);
}

// Function to check if page has protection - improved with smarter detection
function hasProtection(currentUrl, pageTitle, content) {
  // Modified to remove URL from debug output
  logDebug(`Protection check details: Title="${pageTitle}", Content length=${content ? content.length : 0}`);
  
  // *** –ü–†–ò–û–†–ò–¢–ï–¢–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: URL —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –∑–∞—â–∏—Ç—É ***
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∑–∞—â–∏—Ç—ã –ü–ï–†–í–´–ú –¥–µ–ª–æ–º
  if (currentUrl) {
    const protectionUrlIndicators =
      currentUrl.includes('/xpvnsulc/') ||
      currentUrl.includes('captcha') || 
      currentUrl.includes('security-check') ||
      currentUrl.includes('challenge') ||
      currentUrl.includes('ddos') ||
      currentUrl.includes('cloudflare') ||
      currentUrl.includes('cf_chl') ||
      currentUrl.includes('back_location=') ||
      currentUrl.includes('hcheck=') ||
      currentUrl.includes('request_ip=') ||
      currentUrl.includes('oirutpspid=');
    
    if (protectionUrlIndicators) {
      logDebug(`–ó–∞—â–∏—Ç–∞/Captcha –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤ URL: ${currentUrl.substring(0, 100)}...`);
      return true;
    }
  }
  
  // Check for empty or suspiciously short page title - common in protection scenarios
  const emptyOrShortTitle = !pageTitle || pageTitle.trim() === '' || pageTitle.length < 3;
  if (emptyOrShortTitle) {
    logDebug('Protection suspected: Empty or very short page title');
    return true;
  }
  
  // *** –£–°–ò–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–æ–∫ (404, 403, 500 –∏ —Ç.–¥.) ***
  const errorPageIndicators = 
    pageTitle && (
      pageTitle.includes('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞') ||
      pageTitle.includes('Page Not Found') ||
      pageTitle.includes('404') ||
      pageTitle.includes('403') ||
      pageTitle.includes('500') ||
      pageTitle.includes('–û—à–∏–±–∫–∞') ||
      pageTitle.includes('Error') ||
      pageTitle.includes('Forbidden') ||
      pageTitle.includes('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω') ||
      pageTitle.includes('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω') ||
      pageTitle.includes('Product not found') ||
      pageTitle.includes('–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω') ||
      pageTitle.includes('Unavailable') ||
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –ø—É—Å—Ç—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
      pageTitle.trim() === '–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É' || // —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞ = –æ—à–∏–±–∫–∞
      pageTitle.includes('–ì–ª–∞–≤–Ω–∞—è - –í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É') // —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    );
  
  if (errorPageIndicators) {
    logDebug(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: "${pageTitle}"`);
    return true;
  }
  
  // Check for protection indicators in title (more reliable indicator)
  const protectionTitleIndicators = 
    pageTitle && (
      pageTitle.includes('Captcha') || 
      pageTitle.includes('Security Check') || 
      pageTitle.includes('Access Denied') ||
      pageTitle.includes('Robot') ||
      pageTitle.includes('–ü—Ä–æ–≤–µ—Ä–∫–∞') ||
      pageTitle.includes('–ó–∞—â–∏—Ç–∞') ||
      pageTitle.includes('DDoS') ||
      pageTitle.includes('Cloudflare')
    );
  
  if (protectionTitleIndicators) {
    logDebug(`Protection found in title: "${pageTitle}"`);
    return true;
  }
  
  // Check for protection in URL (also reliable)
  const protectionUrlIndicators =
    currentUrl && (
      currentUrl.includes('captcha') || 
      currentUrl.includes('security-check') ||
      currentUrl.includes('challenge') ||
      currentUrl.includes('/xpvnsulc/') ||
      currentUrl.includes('ddos') ||
      currentUrl.includes('cloudflare') ||
      currentUrl.includes('cf_chl')
    );
  
  if (protectionUrlIndicators) {
    logDebug(`Protection found in URL: ${currentUrl}`);
    return true;
  }
  
  // For content, we need to be much more careful - look for ACTIVE captcha elements
  // rather than just the word appearing somewhere in scripts or comments
  if (content) {
    // *** –£–°–ò–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫ ***
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –æ—á–µ–Ω—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –æ—à–∏–±–∫—É
    // –∏ –∏—Å–∫–ª—é—á–∞–µ–º –æ–±—â–∏–µ —Å–ª–æ–≤–∞ —Ç–∏–ø–∞ "Unavailable", –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –≤ JS –∫–æ–¥–µ
    const errorContentPatterns = [
      '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –≤–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', // –¢–æ—á–Ω–∞—è —Ñ—Ä–∞–∑–∞ —Å —Å–∞–π—Ç–∞
      '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –≤–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
      '–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –≤–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
      '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ :(',
      '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
      'Page not found',
      '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω',
      'Product not found',
      '–û—à–∏–±–∫–∞ 404',
      'Error 404',
      'HTTP 404',
      '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
      'Access denied',
      'Forbidden',
      '–°–µ—Ä–≤–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏',
      'Server cannot find',
      '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
      'The requested page does not exist'
      // –£–±–∏—Ä–∞–µ–º "Unavailable" –∏ "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞" –∏–∑-–∑–∞ false positive –≤ JS –∫–æ–¥–µ
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
    let errorIndicatorCount = 0;
    for (const pattern of errorContentPatterns) {
      if (content.toLowerCase().includes(pattern.toLowerCase())) {
        errorIndicatorCount++;
        logDebug(`–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ: "${pattern}"`);
      }
    }
    
    // –î–ª—è —ç—Ç–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –¥–∞–∂–µ 1 –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º
    // –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–æ—á–Ω—ã–µ —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –≤–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" 
    // –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –æ—à–∏–±–æ–∫
    if (errorIndicatorCount >= 1) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –Ω–µ—Ç —è–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞
      const hasObviousProductElements = 
        content.includes('data-qa="get-product-title"') ||
        content.includes('data-qa="product-price"') ||
        content.includes('data-qa="product-add-to-cart-button"') ||
        content.includes('product__title') ||
        content.includes('add-to-cart');
      
      if (!hasObviousProductElements) {
        logDebug(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${errorIndicatorCount} –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏ –±–µ–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞`);
        return true;
      } else {
        logDebug(`–ù–∞–π–¥–µ–Ω—ã –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–∫–∏, –Ω–æ —Ç–∞–∫–∂–µ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ - –≤–µ—Ä–æ—è—Ç–Ω–æ false positive`);
      }
    }
    
    // These patterns indicate an ACTIVE captcha/challenge is present
    const activeProtectionPatterns = [
      '<div class="captcha"', 
      '<div id="captcha"',
      'class="g-recaptcha"',
      'data-sitekey="',
      'hcaptcha',
      '<iframe[^>]*recaptcha',
      'cf-challenge',
      'cloudflare-challenge',
      'waiting-room',
      'ddos-protection'
    ];
    
    // Check for active protection elements
    for (const pattern of activeProtectionPatterns) {
      if (content.includes(pattern)) {
        logDebug(`Active protection element found in content: "${pattern}"`);
        return true;
      }
    }
    
    // If we have product details, it's almost certainly NOT a protection page
    const hasProductDetails = 
      content.includes('product-price') || 
      content.includes('add-to-cart') || 
      (pageTitle && pageTitle.includes('–∫—É–ø–∏—Ç—å'));
    
    // If we detect "captcha" but also have product details, it's likely a false positive
    if (content.toLowerCase().includes('captcha') && hasProductDetails) {
      logDebug('Found "captcha" in content but page has product details - likely false positive');
      return false;
    }
  }
  
  return false; // Default to no protection if none of the checks triggered
}

// Helper function to abbreviate URLs in logs - only for protection URLs
function abbreviateUrl(url) {
  try {
    // If URL is too long or contains known protection patterns, abbreviate it
    if (!url) return 'undefined-url';
    
    // Check for known protection patterns
    if (url.includes('/xpvnsulc/') || 
        url.includes('hcheck=') || 
        url.includes('challenge') ||
        url.includes('captcha') || 
        url.includes('security-check') ||
        url.includes('cloudflare') ||
        url.includes('oirutps')) {
      // Extract just the domain and path, omit query string
      try {
        const urlObj = new URL(url);
        return `${urlObj.origin}${urlObj.pathname} [protection params omitted]`;
      } catch (e) {
        return '[Protection URL detected]';
      }
    }
    
    // Return full URL without truncation
    return url;
  } catch (e) {
    return '[Invalid URL format]';
  }
}

// Function to attempt scraping with or without proxy
async function attemptScrape(link, proxy = null, attemptNumber = 1) {
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Docker + Puppeteer
  logDebug(`üöÄ [attemptScrape] –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ø—ã—Ç–∫—É #${attemptNumber} –¥–ª—è: ${abbreviateUrl(link)}`);
  logDebug(`üîß [attemptScrape] –ü—Ä–æ–∫—Å–∏: ${proxy ? `${proxy.host}:${proxy.port}` : '–ù–µ—Ç'}`);
  
  // üîß [FIX] –û–±—ä—è–≤–ª—è–µ–º startTime –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ catch –±–ª–æ–∫–µ
  const functionStartTime = Date.now();
  let startTime = functionStartTime; // –ë—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω –ø–æ–∑–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ Chromium
  // –í Debian/Ubuntu chromium - —ç—Ç–æ wrapper, —Ä–µ–∞–ª—å–Ω—ã–π –±–∏–Ω–∞—Ä–Ω–∏–∫ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
  const possiblePaths = [
    process.env.PUPPETEER_EXECUTABLE_PATH,
    '/usr/bin/chromium-browser',
    '/usr/bin/chromium',
    '/usr/lib/chromium/chromium',
    '/usr/lib/chromium-browser/chromium-browser',
    '/snap/bin/chromium'
  ].filter(Boolean);
  
  let executablePath = null;
  for (const path of possiblePaths) {
    try {
      const fs = require('fs');
      if (fs.existsSync(path)) {
        const stats = fs.statSync(path);
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª, –∞ –Ω–µ —Å–∏–º–ª–∏–Ω–∫ —Ä–∞–∑–º–µ—Ä–æ–º 0
        if (stats.size > 1000000) { // Chromium –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 1MB
          executablePath = path;
          logDebug(`‚úÖ [Chromium] –ù–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: ${path} (${Math.round(stats.size / 1024 / 1024)} MB)`);
          break;
        }
      }
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    }
  }
  
  if (!executablePath) {
    executablePath = '/usr/bin/chromium'; // Fallback
    logDebug(`‚ö†Ô∏è [Chromium] –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –ø—É—Ç—å: ${executablePath}`);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  try {
    const fs = require('fs');
    const os = require('os');
    
    logDebug(`üíª [System] OS: ${os.platform()} ${os.release()}, Arch: ${os.arch()}`);
    logDebug(`üíæ [System] –ü–∞–º—è—Ç—å: ${Math.round(os.totalmem() / 1024 / 1024)} MB, –°–≤–æ–±–æ–¥–Ω–æ: ${Math.round(os.freemem() / 1024 / 1024)} MB`);
    
    if (fs.existsSync(executablePath)) {
      const stats = fs.statSync(executablePath);
      logDebug(`‚úÖ [Chromium] –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ä–∞–∑–º–µ—Ä: ${Math.round(stats.size / 1024 / 1024)} MB, –ø—Ä–∞–≤–∞: ${stats.mode.toString(8)}`);
    } else {
      logDebug(`‚ùå [Chromium] –§–∞–π–ª –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${executablePath}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º /dev/shm (shared memory)
    if (fs.existsSync('/dev/shm')) {
      const shmStats = fs.statSync('/dev/shm');
      logDebug(`üìÅ [System] /dev/shm —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–∞–≤–∞: ${shmStats.mode.toString(8)}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä shared memory
      try {
        const { exec } = require('child_process');
        exec('df -h /dev/shm', (error, stdout, stderr) => {
          if (!error && stdout) {
            logDebug(`üíæ [System] Shared memory: ${stdout.trim().split('\n')[1]}`);
          }
        });
      } catch (e) {
        logDebug(`‚ö†Ô∏è [System] –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä /dev/shm: ${e.message}`);
      }
    } else {
      logDebug(`‚ùå [System] /dev/shm –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }
  } catch (e) {
    logDebug(`‚ö†Ô∏è [System] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã: ${e.message}`);
  }

  // üöÄ [PROFESSIONAL ANTI-DETECTION] –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏—è —Å–∏—Å—Ç–µ–º–∞
  const launchOptions = { 
    headless: 'new',
    executablePath: executablePath,
    dumpio: true,  // –í–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –æ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ Chromium –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    args: [
      // üî• [CORE SECURITY] –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      '--no-sandbox', 
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      
      // üé≠ [ANTI-DETECTION] –ö—Ä–∏—Ç–∏—á–Ω—ã–µ —Ñ–ª–∞–≥–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–µ—Ç–µ–∫—Ü–∏–∏
      '--disable-blink-features=AutomationControlled',
      '--exclude-switch=enable-automation',
      '--disable-extensions-file-access-check',
      '--disable-extensions-http-throttling',
      '--disable-ipc-flooding-protection',
      '--disable-renderer-backgrounding',
      '--disable-backgrounding-occluded-windows',
      '--disable-background-timer-throttling',
      '--disable-component-extensions-with-background-pages',
      '--disable-default-apps',
      '--disable-features=TranslateUI,VizDisplayCompositor',
      '--disable-hang-monitor',
      '--disable-prompt-on-repost',
      '--disable-sync',
      '--disable-web-security',
      '--metrics-recording-only',
      '--no-first-run',
      '--no-default-browser-check',
      '--password-store=basic',
      '--use-mock-keychain',
      
      // üñ•Ô∏è [REALISTIC DISPLAY] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏—Å–ø–ª–µ—è
      '--window-size=1920,1080',
      '--force-device-scale-factor=1',
      '--disable-accelerated-2d-canvas',
      '--disable-gpu',
      '--disable-gpu-sandbox',
      '--disable-software-rasterizer',
      
      // üîá [SILENCE ERRORS] –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ (–Ω–æ –Ω–µ –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –¥–µ—Ç–µ–∫—Ü–∏—é)
      '--disable-dbus',
      '--disable-logging',
      '--silent-debugger-extension-api',
      '--disable-extensions-except',
      
      // üåç [LANGUAGE & LOCALE] –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è  
      '--lang=ru-RU,ru',
      '--accept-lang=ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7'
    ],
    
    // üñ•Ô∏è [REALISTIC VIEWPORT] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π viewport (–ù–ï headless –ø—Ä–∏–∑–Ω–∞–∫–∏!)
    defaultViewport: {
      width: 1920,
      height: 1080,
      deviceScaleFactor: 1,
      hasTouch: false,
      isLandscape: true,
      isMobile: false
    }
  };
  
  logDebug(`‚öôÔ∏è [ANTI-DETECTION] –û–ø—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∞–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏–µ–π`);
  logDebug(`üîß [ANTI-DETECTION] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–ª–∞–≥–æ–≤: ${launchOptions.args.length}`);
  
  if (proxy) {
    launchOptions.args.push(`--proxy-server=${proxy.host}:${proxy.port}`);
    logDebug(`üåê [Proxy] –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä: ${proxy.host}:${proxy.port}`);
  }
  
  logDebug(`üîÑ [Puppeteer] –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –∞–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏–µ–π...`);
  const browserStartTime = Date.now();
  
  let browser;
  try {
    browser = await puppeteer.launch(launchOptions);
    const browserLaunchTime = Date.now() - browserStartTime;
    logDebug(`‚úÖ [Puppeteer] –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∑–∞ ${browserLaunchTime}ms`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –±—Ä–∞—É–∑–µ—Ä–∞
    const browserVersion = await browser.version();
    logDebug(`üîç [Browser] –í–µ—Ä—Å–∏—è: ${browserVersion}`);
    
  } catch (launchError) {
    logDebug(`‚ùå [Puppeteer] –û–®–ò–ë–ö–ê –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: ${launchError.message}`);
    logDebug(`üîç [Error] Stack trace: ${launchError.stack}`);
    throw launchError;
  }
  
  try {
    logDebug(`üìÑ [Page] –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...`);
    const pageStartTime = Date.now();
    const page = await browser.newPage();
    const pageCreateTime = Date.now() - pageStartTime;
    logDebug(`‚úÖ [Page] –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞ ${pageCreateTime}ms`);
    
    if (proxy) {
      logDebug(`üîê [Proxy] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...`);
      await page.authenticate({
        username: proxy.username,
        password: proxy.password
      });
      logDebug(`‚úÖ [Proxy] –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`);
    }
    
    // üöÄ [CRITICAL] –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –ê–ù–¢–ò-–î–ï–¢–ï–ö–¶–ò–Ø - –î–û–õ–ñ–ù–ê –ë–´–¢–¨ –ü–ï–†–í–û–ô!
    logDebug(`üé≠ [ANTI-DETECTION] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –∞–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏—é...`);
    
    await page.evaluateOnNewDocument(() => {
      // üî• [PLATFORM FIX] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ platform detection
      Object.defineProperty(navigator, 'platform', {
        get: () => 'Win32',
        configurable: true
      });
      
      // üñ•Ô∏è [SCREEN FIX] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–∞ (–ù–ï headless!)
      Object.defineProperty(screen, 'width', { get: () => 1920, configurable: true });
      Object.defineProperty(screen, 'height', { get: () => 1080, configurable: true });
      Object.defineProperty(screen, 'availWidth', { get: () => 1920, configurable: true });
      Object.defineProperty(screen, 'availHeight', { get: () => 1040, configurable: true }); // –£—á–∏—Ç—ã–≤–∞–µ–º taskbar
      Object.defineProperty(screen, 'colorDepth', { get: () => 24, configurable: true });
      Object.defineProperty(screen, 'pixelDepth', { get: () => 24, configurable: true });
      
      // üî• [WEBDRIVER ELIMINATION] –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ webdriver —Å–ª–µ–¥–æ–≤
      Object.defineProperty(navigator, 'webdriver', {
        get: () => false,  // –ù–ï undefined - –∏–º–µ–Ω–Ω–æ false!
        configurable: true
      });
      delete navigator.__proto__.webdriver;
      
      // üåç [LANGUAGE FIX] –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
      Object.defineProperty(navigator, 'language', {
        get: () => 'ru-RU',
        configurable: true
      });
      
      Object.defineProperty(navigator, 'languages', {
        get: () => ['ru-RU', 'ru', 'en-US', 'en'],
        configurable: true
      });
      
      // üîå [PLUGINS SIMULATION] –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
      Object.defineProperty(navigator, 'plugins', {
        get: () => {
          const pluginArray = [];
          pluginArray.length = 5;
          pluginArray[Symbol.iterator] = Array.prototype[Symbol.iterator];
          return pluginArray;
        },
        configurable: true
      });
      
      // üé® [CHROME SIMULATION] –ü–æ–ª–Ω–∞—è –∏–º–∏—Ç–∞—Ü–∏—è Chrome API
      window.chrome = {
        runtime: {
          id: 'nmmhkkegccagdldgiimedpiccmgmieda',
          onMessage: {},
          onConnect: {},
          sendMessage: function() {},
          connect: function() {},
          getManifest: function() { 
            return {
              name: 'Chrome Extension',
              version: '1.0.0'
            }; 
          }
        },
        loadTimes: function() {
          return {
            requestTime: Date.now() / 1000,
            startLoadTime: Date.now() / 1000,
            commitLoadTime: Date.now() / 1000,
            finishDocumentLoadTime: Date.now() / 1000,
            finishLoadTime: Date.now() / 1000,
            firstPaintTime: Date.now() / 1000,
            firstPaintAfterLoadTime: 0,
            navigationType: 'Other',
            wasFetchedViaSpdy: false,
            wasNpnNegotiated: false,
            npnNegotiatedProtocol: 'unknown',
            wasAlternateProtocolAvailable: false,
            connectionInfo: 'http/1.1'
          };
        },
        csi: function() {
          return {
            startE: Date.now(),
            onloadT: Date.now(),
            pageT: Math.random() * 1000 + 1000,
            tran: Math.floor(Math.random() * 20) + 1
          };
        },
        app: {
          isInstalled: false,
          InstallState: {
            DISABLED: 'disabled',
            INSTALLED: 'installed',
            NOT_INSTALLED: 'not_installed'
          },
          RunningState: {
            CANNOT_RUN: 'cannot_run',
            READY_TO_RUN: 'ready_to_run',
            RUNNING: 'running'
          }
        }
      };
      
      // üîß [PERMISSIONS API] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
      if (window.navigator.permissions) {
        const originalQuery = window.navigator.permissions.query;
        window.navigator.permissions.query = (parameters) => (
          parameters.name === 'notifications' ?
            Promise.resolve({ state: Notification.permission }) :
            originalQuery(parameters)
        );
      }
      
      // üîá [CONSOLE FILTER] –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤
      const originalConsoleError = console.error;
      console.error = function(...args) {
        const message = args.join(' ');
        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏, –ù–ï –≤–ª–∏—è—é—â–∏–µ –Ω–∞ UX
        if (!message.includes('WebGL') && 
            !message.includes('GroupMarkerNotSet') && 
            !message.includes('swiftshader') &&
            !message.includes('gpu/command_buffer') &&
            !message.includes('dbus') &&
            !message.includes('DevTools')) {
          originalConsoleError.apply(console, args);
        }
      };
      
      // üïê [TIMING ATTACKS] –ó–∞—â–∏—Ç–∞ –æ—Ç timing attacks
      const originalDateNow = Date.now;
      Date.now = function() {
        return originalDateNow() + Math.floor(Math.random() * 2);
      };
      
      // üéØ [FINAL TOUCH] –£–¥–∞–ª—è–µ–º automation indicators
      window.navigator.webdriver = false;
      delete window.navigator.webdriver;
      
      // –û—á–∏—â–∞–µ–º –≤—Å–µ automation —Å–ª–µ–¥—ã –∏–∑ DOM
      if (document.documentElement) {
        document.documentElement.removeAttribute('webdriver');
      }
    });
    
    logDebug(`‚úÖ [ANTI-DETECTION] –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!`);
    
    // üîß [USER-AGENT] –¢–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π User-Agent
    logDebug(`üåê [UserAgent] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π User-Agent...`);
    const realistic_user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36';
    await page.setUserAgent(realistic_user_agent);
    
    // üñ•Ô∏è [VIEWPORT] –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π viewport
    await page.setViewport({
      width: 1920,
      height: 1080,
      deviceScaleFactor: 1,
      hasTouch: false,
      isLandscape: true,
      isMobile: false
    });
    
    // üìã [HEADERS] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ò–°–ü–†–ê–í–õ–Ø–ï–ú –ü–£–°–¢–´–ï –ó–ê–ì–û–õ–û–í–ö–ò!)
    logDebug(`üìã [Headers] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏...`);
    
    const professionalHeaders = {
      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
      'Accept-Encoding': 'gzip, deflate, br',
      'Cache-Control': 'no-cache',
      'Pragma': 'no-cache',
      'Sec-Ch-Ua': '"Chromium";v="136", "Not_A Brand";v="24", "Google Chrome";v="136"',
      'Sec-Ch-Ua-Mobile': '?0',
      'Sec-Ch-Ua-Platform': '"Windows"',  // üî• –ö–†–ò–¢–ò–ß–ù–û: Windows, –ù–ï Linux!
      'Sec-Fetch-Dest': 'document',
      'Sec-Fetch-Mode': 'navigate',
      'Sec-Fetch-Site': 'none',
      'Sec-Fetch-User': '?1',
      'Upgrade-Insecure-Requests': '1',
      'DNT': '1'  // Do Not Track –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    };
    
    await page.setExtraHTTPHeaders(professionalHeaders);
    logDebug(`‚úÖ [Headers] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${Object.keys(professionalHeaders).length} –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤`);
    
    // üöÄ [3-STAGE NAVIGATION] –¢—Ä–µ—Ö—ç—Ç–∞–ø–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è vseinstrumenti.ru
    let targetUrl = link; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
    
    if (link.includes('vseinstrumenti.ru')) {
      logDebug(`üöÄ [3-STAGE] === –¢–†–ï–•–≠–¢–ê–ü–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø ===`);
      
      try {
        // üè† [STAGE 1/3] –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê
        logDebug(`üè† [STAGE 1/3] –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...`);
        
        const initialDelay = Math.floor(Math.random() * 1000) + 500;
        logDebug(`‚è∞ [STAGE 1/3] –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞: ${initialDelay}ms`);
        await new Promise(resolve => setTimeout(resolve, initialDelay));
        
        const homePageStart = Date.now();
        const homeResponse = await page.goto('https://www.vseinstrumenti.ru/', { 
          waitUntil: 'domcontentloaded',
          timeout: 45000
        });
        
        const homeStatus = homeResponse ? homeResponse.status() : 'unknown';
        logDebug(`‚úÖ [STAGE 1/3] –ì–ª–∞–≤–Ω–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∑–∞ ${Date.now() - homePageStart}ms, —Å—Ç–∞—Ç—É—Å: ${homeStatus}`);
        
        if (homeStatus === 403) {
          logDebug(`‚ùå [STAGE 1/3] –ì–ª–∞–≤–Ω–∞—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: HTTP 403`);
        } else {
          logDebug(`üéâ [STAGE 1/3] –ì–ª–∞–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ!`);
        }
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–ª–∞–≤–Ω–æ–π
        await new Promise(resolve => setTimeout(resolve, 1500));
        await page.mouse.move(500, 300);
        await new Promise(resolve => setTimeout(resolve, 800));
        
        // üèôÔ∏è [STAGE 2/3] –£–°–¢–ê–ù–û–í–ö–ê –ì–û–†–û–î–ê
        logDebug(`üèôÔ∏è [STAGE 2/3] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥ ID=${CITY_CONFIG.representId}...`);
        
        const citySetupStart = Date.now();
        const cityUrl = `https://www.vseinstrumenti.ru/represent/change/?represent_id=${CITY_CONFIG.representId}`;
        logDebug(`üèôÔ∏è [STAGE 2/3] URL —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–æ—Ä–æ–¥–∞: ${cityUrl}`);
        
        const cityResponse = await page.goto(cityUrl, { 
          waitUntil: 'domcontentloaded',
          timeout: 30000 
        });
        
        const cityStatus = cityResponse ? cityResponse.status() : 'unknown';
        const cityFinalUrl = page.url();
        logDebug(`‚úÖ [STAGE 2/3] –ì–æ—Ä–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞ ${Date.now() - citySetupStart}ms, —Å—Ç–∞—Ç—É—Å: ${cityStatus}`);
        logDebug(`üîç [STAGE 2/3] –§–∏–Ω–∞–ª—å–Ω—ã–π URL: ${abbreviateUrl(cityFinalUrl)}`);
        
        // –ñ–¥–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫—É–∫
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // üõí [STAGE 3/3] –ù–ê–°–¢–†–û–ô–ö–ê –î–õ–Ø –¢–û–í–ê–†–ê
        logDebug(`üõí [STAGE 3/3] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞...`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
        await page.setExtraHTTPHeaders({
          ...professionalHeaders,
          'Sec-Fetch-Site': 'same-origin',
          'Referer': cityFinalUrl
        });
        
        logDebug(`‚úÖ [3-STAGE] –¢—Ä–µ—Ö—ç—Ç–∞–ø–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!`);
        
        // targetUrl –æ—Å—Ç–∞–µ—Ç—Å—è link (–ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä)
        
      } catch (error) {
        logDebug(`‚ö†Ô∏è [3-STAGE] –û—à–∏–±–∫–∞ —Ç—Ä–µ—Ö—ç—Ç–∞–ø–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${error.message}`);
        logDebug(`üîÑ [3-STAGE] Fallback –∫ –æ–±—ã—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...`);
        // targetUrl –æ—Å—Ç–∞–µ—Ç—Å—è link
      }
    } else {
      // üåç [OTHER SITES] –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–∞–π—Ç–æ–≤ - –æ–±—ã—á–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
      logDebug(`üåç [OTHER SITES] –û–±—ã—á–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–∞–π—Ç–∞`);
    }
    
    logDebug(`üîó [Navigation] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ü–µ–ª–µ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${abbreviateUrl(targetUrl)}`);
    
    startTime = Date.now();
    
    // –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
    logDebug(`üîç [DEBUG] === –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ü–†–û–°–ê ===`);
    logDebug(`üåê [DEBUG] –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL: ${link}`);
    logDebug(`üåê [DEBUG] –¶–µ–ª–µ–≤–æ–π URL (—Å city representation): ${targetUrl}`);
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const currentHeaders = await page.extraHTTPHeaders || {};
    logDebug(`üìã [DEBUG] –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: ${JSON.stringify(currentHeaders, null, 2)}`);
    
    // –õ–æ–≥–∏—Ä—É–µ–º User-Agent
    const userAgent = await page.evaluate(() => navigator.userAgent);
    logDebug(`üïµÔ∏è [DEBUG] User-Agent: ${userAgent}`);
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const sysInfo = await page.evaluate(() => ({
      platform: navigator.platform,
      language: navigator.language,
      languages: navigator.languages,
      cookieEnabled: navigator.cookieEnabled,
      webdriver: navigator.webdriver,
      plugins: navigator.plugins.length,
      screen: { width: screen.width, height: screen.height },
      viewport: { width: window.innerWidth, height: window.innerHeight }
    }));
    logDebug(`üíª [DEBUG] Navigator info: ${JSON.stringify(sysInfo, null, 2)}`);
    
    const response = await page.goto(targetUrl, { 
      waitUntil: 'networkidle2', 
      timeout: 90000 
    });
    
    // üîç [FINAL CHECK] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π URL –ø–æ—Å–ª–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const finalUrl = page.url();
    logDebug(`üîç [FINAL] –§–∏–Ω–∞–ª—å–Ω—ã–π URL: ${abbreviateUrl(finalUrl)}`);
    logDebug(`üîç [FINAL] –û–∂–∏–¥–∞–ª–∏ —Ç–æ–≤–∞—Ä, –ø–æ–ª—É—á–∏–ª–∏: ${finalUrl.includes('/product/') ? '–¢–û–í–ê–† ‚úÖ' : '–ù–ï –¢–û–í–ê–† ‚ùå'}`);
    
    // –î–ª—è vseinstrumenti.ru –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞
    if (link.includes('vseinstrumenti.ru') && !finalUrl.includes('/product/')) {
      logDebug(`‚ö†Ô∏è  [FINAL] –ü–†–û–ë–õ–ï–ú–ê: –§–∏–Ω–∞–ª—å–Ω—ã–π URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç /product/!`);
      logDebug(`üîó [FINAL] –ò—Å—Ö–æ–¥–Ω—ã–π URL: ${abbreviateUrl(link)}`);
      logDebug(`üîó [FINAL] –¶–µ–ª–µ–≤–æ–π URL: ${abbreviateUrl(targetUrl)}`);
      logDebug(`üîó [FINAL] –§–∏–Ω–∞–ª—å–Ω—ã–π URL: ${abbreviateUrl(finalUrl)}`);
    }
    
    const navigationTime = Date.now() - startTime;
    logDebug(`‚úÖ [Navigation] –ü–µ—Ä–µ—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${navigationTime}ms`);
    logDebug(`üìä [HTTP] –°—Ç–∞—Ç—É—Å: ${response.status()}`);
    
    if (response.status() !== 200) {
      logDebug(`‚ùå [HTTP] –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏: HTTP ${response.status()}`);
    } else {
      logDebug(`‚úÖ [HTTP] –£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
    }
    
    // *** –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ ***
    const statusCode = response ? response.status() : null;
    if (statusCode) {
      logDebug(`üìä [HTTP] –°—Ç–∞—Ç—É—Å: ${statusCode}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥—ã
      if (statusCode >= 400) {
        logDebug(`‚ùå [HTTP] –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏: HTTP ${statusCode}`);
        return { 
          success: false, 
          protectionDetected: true, 
          error: `HTTP ${statusCode} - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞` 
        };
      }
    }
    
    let currentUrl = '';
    let pageTitle = '';
    let earlyPageTitle = '';
    let protectionDetected = false;
    let pageContent = '';
    
    try {
      currentUrl = page.url();
      logDebug(`Current URL: ${abbreviateUrl(currentUrl)}`);
    } catch (error) {
      logDebug(`Error getting current URL: ${error.message}`);
    }
    
    try {
      await new Promise(resolve => setTimeout(resolve, 2000));
      pageTitle = await page.title();
      logDebug(`Full Page title: "${pageTitle}"`);
      
      pageContent = await page.content();
      logDebug(`Page content length: ${pageContent.length} bytes`);
    } catch (error) {
      logDebug(`Error getting page info: ${error.message}`);
    }
    
    // *** –†–ê–ù–ù–Ø–Ø –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (–î–û –ò–ó–ú–ï–ù–ï–ù–ò–Ø JAVASCRIPT) ***
    logDebug('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –†–ê–ù–ù–Æ–Æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è JS)...');
    
    try {
      const earlyDiagnostic = await page.evaluate(() => {
        const title = document.title;
        const hasProductElements = !!document.querySelector('h1[data-qa="get-product-title"]') ||
                                    !!document.querySelector('[data-qa="product-price"]') ||
                                    !!document.querySelector('[data-qa="product-add-to-cart-button"]') ||
                                    !!document.querySelector('.product__title') ||
                                    !!document.querySelector('[itemprop="name"]');
        
        const hasErrorIndicators = title.toLowerCase().includes('—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞') ||
                                   title.toLowerCase().includes('page not found') ||
                                   title.toLowerCase().includes('404') ||
                                   title.toLowerCase().includes('–æ—à–∏–±–∫–∞') ||
                                   document.body.innerText.toLowerCase().includes('–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è –≤–∞–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        
        // *** –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –î–µ—Ç–µ–∫—Ü–∏—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω—É—é/—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ***
        const bodyText = document.body ? document.body.innerText : '';
        const hasRedirectIndicators = 
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          title === '–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É' ||
          title.includes('–ì–ª–∞–≤–Ω–∞—è - –í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É') ||
          title.includes('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥') ||
          title.includes('Choose your city') ||
          title.includes('–í—Å–µ–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.—Ä—É - –æ–Ω–ª–∞–π–Ω-–≥–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç') ||
          title.includes('–¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –∏ –±–∏–∑–Ω–µ—Å–∞') ||
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
          bodyText.includes('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥') ||
          bodyText.includes('–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥') && bodyText.includes('–ú–æ—Å–∫–≤–∞') && bodyText.includes('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥') ||
          (bodyText.includes('–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤') && !hasProductElements);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–µ—Å–ª–∏ –º–Ω–æ–≥–æ —Ç–∞–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ - —ç—Ç–æ –Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞)
        const buttons = Array.from(document.querySelectorAll('button'));
        const navButtonTexts = buttons.map(btn => btn.textContent.trim().toLowerCase());
        const navKeywords = ['–æ –Ω–∞—Å', '–∫–∞—Ç–∞–ª–æ–≥', '–≥–ª–∞–≤–Ω–∞—è', '–∫–æ–Ω—Ç–∞–∫—Ç—ã', '–∞–∫—Ü–∏–∏', '–≤–æ–π—Ç–∏', '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'];
        const navButtonCount = navKeywords.filter(keyword => 
          navButtonTexts.some(btnText => btnText.includes(keyword))
        ).length;
        
        const hasNavigation = navButtonCount >= 3; // –ï—Å–ª–∏ 3+ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ - —ç—Ç–æ –Ω–µ —Ç–æ–≤–∞—Ä
        
        return {
          title,
          hasProductElements,
          hasErrorIndicators,
          hasRedirectIndicators,
          hasNavigation,
          navButtonCount,
          bodyLength: document.body ? document.body.innerText.length : 0,
          buttonTexts: navButtonTexts.slice(0, 10) // –ü–µ—Ä–≤—ã–µ 10 –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        };
      });
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑ —Ä–∞–Ω–Ω–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      earlyPageTitle = earlyDiagnostic.title;
      
      logDebug(`üìä –†–ê–ù–ù–Ø–Ø –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –∑–∞–≥–æ–ª–æ–≤–æ–∫="${earlyDiagnostic.title}", —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞=${earlyDiagnostic.hasProductElements}, –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–æ–∫=${earlyDiagnostic.hasErrorIndicators}, —Ä–µ–¥–∏—Ä–µ–∫—Ç=${earlyDiagnostic.hasRedirectIndicators}, –Ω–∞–≤–∏–≥–∞—Ü–∏—è=${earlyDiagnostic.hasNavigation} (${earlyDiagnostic.navButtonCount} –∫–Ω–æ–ø–æ–∫)`);
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —è–≤–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –æ—à–∏–±–æ–∫ –ò –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∞ - —ç—Ç–æ —Ç–æ—á–Ω–æ –æ—à–∏–±–∫–∞
      if (earlyDiagnostic.hasErrorIndicators && !earlyDiagnostic.hasProductElements) {
        logDebug(`‚ùå –†–ê–ù–ù–Ø–Ø –ó–ê–©–ò–¢–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏ "${earlyDiagnostic.title}"`);
        return { success: false, protectionDetected: true, error: 'Early error page detection' };
      }
      
      // *** –ù–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê: –î–µ—Ç–µ–∫—Ü–∏—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é/—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É ***
      if ((earlyDiagnostic.hasRedirectIndicators || earlyDiagnostic.hasNavigation) && !earlyDiagnostic.hasProductElements) {
        logDebug(`üîÑ –†–ê–ù–ù–Ø–Ø –ó–ê–©–ò–¢–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é/—Ä–µ–≥–∏–æ–Ω "${earlyDiagnostic.title}", –∫–Ω–æ–ø–∫–∏: [${earlyDiagnostic.buttonTexts.slice(0, 5).join(', ')}]`);
        return { success: false, protectionDetected: true, error: 'Redirect to main/region page detected' };
      }
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
      if (earlyDiagnostic.hasProductElements) {
        logDebug('‚úÖ –†–ê–ù–ù–Ø–Ø –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ù–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ');
      } else {
        logDebug(`‚ö†Ô∏è –†–ê–ù–ù–Ø–Ø –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –≠–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–¥—É–∫—Ç–∞ –ù–ï –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –æ—à–∏–±–æ–∫ —Ç–æ–∂–µ –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é.`);
      }
      
    } catch (diagError) {
      logDebug(`–û—à–∏–±–∫–∞ —Ä–∞–Ω–Ω–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${diagError.message}`);
    }
    
    logDebug(`üîç [DEBUG] Original URL: ${abbreviateUrl(link)}`);
    logDebug(`üîç [DEBUG] Target URL: ${abbreviateUrl(targetUrl)}`);
    logDebug(`üîç [DEBUG] Using proxy: ${proxy ? `${proxy.host}:${proxy.port}` : 'No proxy'}`);
    
    protectionDetected = hasProtection(currentUrl, pageTitle, pageContent);
    
    // Try extracting product data
    try {
      // Check for proof of product page - if we find clear product elements, override protection detection
      const isDefinitelyProductPage = await page.evaluate(() => {
        // These are very specific to product pages and won't be on protection pages
        const hasProductElements = 
          !!document.querySelector('h1[data-qa="get-product-title"]') ||
          !!document.querySelector('.product__title') ||
          !!document.querySelector('[data-qa="product-price"]') ||
          !!document.querySelector('[data-qa="product-add-to-cart-button"]');
          
        return hasProductElements;
      });
      
      if (isDefinitelyProductPage) {
        logDebug('Found definite product page elements - overriding any protection detection');
        
              // If we're sure it's a product page, move forward with extraction
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ URL –µ—â—ë —Ä–∞–∑ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º
      const currentTitleBeforeExtraction = await page.title();
      const currentUrlBeforeExtraction = page.url();
      logDebug(`–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º: "${currentTitleBeforeExtraction}"`);
      logDebug(`URL –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º: ${currentUrlBeforeExtraction}`);
      
      if (currentTitleBeforeExtraction !== pageTitle) {
        logDebug(`‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: "${pageTitle}", —Å—Ç–∞–ª–æ: "${currentTitleBeforeExtraction}"`);
      }
      
      if (currentUrlBeforeExtraction !== currentUrl) {
        logDebug(`‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: URL –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: "${currentUrl}", —Å—Ç–∞–ª–æ: "${currentUrlBeforeExtraction}"`);
      }
      
      // üö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î extractProductData
      logDebug(`üîç [CRITICAL] === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î extractProductData ===`);
      try {
        const pageState = {
          isClosed: page.isClosed(),
          url: currentUrlBeforeExtraction,
          title: currentTitleBeforeExtraction
        };
        logDebug(`üìä [CRITICAL] –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${JSON.stringify(pageState)}`);
        
        const browserConnected = browser.isConnected();
        logDebug(`üîó [CRITICAL] –ë—Ä–∞—É–∑–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω: ${browserConnected}`);
        
        if (!browserConnected) {
          throw new Error('–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫–ª—é—á–µ–Ω –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö');
        }
        
        if (pageState.isClosed) {
          throw new Error('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö');
        }
        
        logDebug(`‚úÖ [CRITICAL] –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º extractProductData...`);
      } catch (stateCheckError) {
        logDebug(`‚ùå [CRITICAL] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: ${stateCheckError.message}`);
        throw stateCheckError;
      }
      
      const extractStartTime = Date.now();
      const productData = await extractProductData(page, earlyPageTitle);
      const extractTime = Date.now() - extractStartTime;
      
      logDebug(`‚úÖ [CRITICAL] extractProductData –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${extractTime}ms`);
      logDebug(`üìä [CRITICAL] –†–µ–∑—É–ª—å—Ç–∞—Ç: name="${productData.name}", price=${productData.price}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
      if (!isDataQualityGood(productData)) {
        throw new Error('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞—á–µ—Å—Ç–≤–∞');
      }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –¥–µ–±–∞–≥–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ
        try {
          const htmlContent = await page.content();
          // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º productData –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏
          const dataToSave = (productData && productData.name && 
                               !productData.name.match(/–≥–ª–∞–≤–Ω–∞—è|error|–æ—à–∏–±–∫–∞|–Ω–µ –Ω–∞–π–¥–µ–Ω–∞|—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞/i)) 
                               ? productData : null;
          await saveHtmlForDebug(htmlContent, link, dataToSave, { 
            proxy, 
            attempt: attemptNumber,
            originalUrl: link,
            targetUrl: targetUrl 
          });
        } catch (htmlError) {
          logDebug(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML –¥–ª—è –¥–µ–±–∞–≥–∞: ${htmlError.message}`);
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML
        }
        
        return { success: true, data: productData };
      }
      
      // If we're not sure it's definitely a product page, proceed with normal protection check
      if (protectionDetected) {
        logDebug('Protection detected and no clear product elements found');
        return { success: false, protectionDetected: true, error: 'Protection detected' };
      }
      
      // Normal extraction path
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ URL –µ—â—ë —Ä–∞–∑ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º
      const currentTitleBeforeExtraction = await page.title();
      const currentUrlBeforeExtraction = page.url();
      logDebug(`–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º: "${currentTitleBeforeExtraction}"`);
      logDebug(`URL –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º: ${currentUrlBeforeExtraction}`);
      
      if (currentTitleBeforeExtraction !== pageTitle) {
        logDebug(`‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: "${pageTitle}", —Å—Ç–∞–ª–æ: "${currentTitleBeforeExtraction}"`);
      }
      
      if (currentUrlBeforeExtraction !== currentUrl) {
        logDebug(`‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: URL –∏–∑–º–µ–Ω–∏–ª—Å—è! –ë—ã–ª–æ: "${currentUrl}", —Å—Ç–∞–ª–æ: "${currentUrlBeforeExtraction}"`);
      }
      
      // üö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î extractProductData
      logDebug(`üîç [CRITICAL] === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ï–†–ï–î extractProductData ===`);
      try {
        const pageState = {
          isClosed: page.isClosed(),
          url: currentUrlBeforeExtraction,
          title: currentTitleBeforeExtraction
        };
        logDebug(`üìä [CRITICAL] –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${JSON.stringify(pageState)}`);
        
        const browserConnected = browser.isConnected();
        logDebug(`üîó [CRITICAL] –ë—Ä–∞—É–∑–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω: ${browserConnected}`);
        
        if (!browserConnected) {
          throw new Error('–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫–ª—é—á–µ–Ω –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö');
        }
        
        if (pageState.isClosed) {
          throw new Error('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞ –ø–µ—Ä–µ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö');
        }
        
        logDebug(`‚úÖ [CRITICAL] –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º extractProductData...`);
      } catch (stateCheckError) {
        logDebug(`‚ùå [CRITICAL] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: ${stateCheckError.message}`);
        throw stateCheckError;
      }
      
      const extractStartTime = Date.now();
      const productData = await extractProductData(page, earlyPageTitle);
      const extractTime = Date.now() - extractStartTime;
      
      logDebug(`‚úÖ [CRITICAL] extractProductData –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${extractTime}ms`);
      logDebug(`üìä [CRITICAL] –†–µ–∑—É–ª—å—Ç–∞—Ç: name="${productData.name}", price=${productData.price}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
      if (!isDataQualityGood(productData)) {
        throw new Error('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞—á–µ—Å—Ç–≤–∞');
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –¥–µ–±–∞–≥–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ
      try {
        const htmlContent = await page.content();
        // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º productData –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏
        const dataToSave = (productData && productData.name && 
                             !productData.name.match(/–≥–ª–∞–≤–Ω–∞—è|error|–æ—à–∏–±–∫–∞|–Ω–µ –Ω–∞–π–¥–µ–Ω–∞|—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞/i)) 
                             ? productData : null;
        await saveHtmlForDebug(htmlContent, link, dataToSave, { 
          proxy, 
          attempt: attemptNumber,
          originalUrl: link,
          targetUrl: targetUrl 
        });
      } catch (htmlError) {
        logDebug(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML –¥–ª—è –¥–µ–±–∞–≥–∞: ${htmlError.message}`);
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML
      }
      
      return { success: true, data: productData };
    } catch (error) {
      logDebug(`Product extraction failed: ${error.message}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–æ–π –∑–∞—â–∏—Ç—ã/—Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏
      const isProtectionError = error.message && (
        error.message.includes('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏/–∑–∞—â–∏—Ç—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞') ||
        error.message.includes('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏') ||
        error.message.includes('—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞') ||
        error.message.includes('–∑–∞—â–∏—Ç–∞') ||
        error.message.includes('captcha')
      );
      
      if (isProtectionError) {
        logDebug('üõ°Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∑–∞—â–∏—Ç–∞/–æ—à–∏–±–∫–∞ - –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ protectionDetected');
        return { success: false, protectionDetected: true, error: error.message };
      }
      
      return { success: false, error: error.message };
    }
    
  } catch (error) {
    // üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ë–õ–û–ö: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
    logDebug(`üö® [ERROR] === –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í ATTEMPTCRAPE ===`);
    logDebug(`‚ùå [ERROR] –¢–∏–ø –æ—à–∏–±–∫–∏: ${error.constructor.name}`);
    logDebug(`üìù [ERROR] –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    logDebug(`üîç [ERROR] Stack trace: ${error.stack}`);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    try {
      if (browser) {
        const browserConnected = browser.isConnected();
        logDebug(`üîó [ERROR] –ë—Ä–∞—É–∑–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω: ${browserConnected}`);
        
        if (browserConnected) {
          const pages = await browser.pages();
          logDebug(`üìÑ [ERROR] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: ${pages.length}`);
          
          if (page) {
            const pageUrl = await page.url().catch(e => `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL: ${e.message}`);
            const pageTitle = await page.title().catch(e => `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞: ${e.message}`);
            logDebug(`üìÑ [ERROR] URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageUrl}`);
            logDebug(`üìÑ [ERROR] –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageTitle}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const isClosed = page.isClosed();
            logDebug(`üìÑ [ERROR] –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞: ${isClosed}`);
          } else {
            logDebug(`üìÑ [ERROR] –û–±—ä–µ–∫—Ç page –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω`);
          }
        }
      } else {
        logDebug(`üåê [ERROR] –û–±—ä–µ–∫—Ç browser –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω`);
      }
    } catch (diagError) {
      logDebug(`‚ö†Ô∏è [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: ${diagError.message}`);
    }
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è "Execution context was destroyed"
    if (error.message && error.message.includes('Execution context was destroyed')) {
      logDebug(`üîÑ [ERROR] –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
      logDebug(`üí° [ERROR] –≠—Ç–æ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞:`);
      logDebug(`   - –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
      logDebug(`   - –ó–∞–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã/–±—Ä–∞—É–∑–µ—Ä–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
      logDebug(`   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —Å–∞–π—Ç–∞ –∏–ª–∏ –∞–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç–∞`);
      logDebug(`   - –¢–∞–π–º–∞—É—Ç –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é`);
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—à–∏–±–∫–∏
      try {
        const elapsedTime = Date.now() - (startTime || functionStartTime);
        logDebug(`üïê [ERROR] –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ –æ—à–∏–±–∫–∏: ${elapsedTime}ms`);
      } catch (timeError) {
        logDebug(`üïê [ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã—á–∏—Å–ª–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${timeError.message}`);
      }
      
      return { 
        success: false, 
        protectionDetected: true, 
        error: `–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–∑—Ä—É—à–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–∞ –∞–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç–∞): ${error.message}` 
      };
    }
    
    logDebug(`Error during scraping: ${error.message}`);
    return { success: false, error: error.message };
  } finally {
    // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
    logDebug(`üßπ [CLEANUP] –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ä–µ—Å—É—Ä—Å–æ–≤...`);
    
    try {
      if (browser) {
        const isConnected = browser.isConnected();
        logDebug(`üîó [CLEANUP] –ë—Ä–∞—É–∑–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º: ${isConnected}`);
        
        if (isConnected) {
          await browser.close();
          logDebug(`‚úÖ [CLEANUP] –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç`);
        } else {
          logDebug(`‚ö†Ô∏è [CLEANUP] –ë—Ä–∞—É–∑–µ—Ä —É–∂–µ –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω`);
        }
      } else {
        logDebug(`‚ö†Ô∏è [CLEANUP] –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);
      }
    } catch (closeError) {
      logDebug(`‚ùå [CLEANUP] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: ${closeError.message}`);
    }
  }
}

// Main scraping function with improved proxy support
export async function scrapeWithProxySupport(link, maxRetries = 10, progressHandler = null) {
  // üîç –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∫—Ä–∞–ø–∏–Ω–≥
  logDebug(`üéØ [MAIN] === –ù–ê–ß–ê–õ–û –°–ö–†–ê–ü–ò–ù–ì–ê ===`);
  logDebug(`üîó [MAIN] URL: ${link}`);
  logDebug(`üîÑ [MAIN] –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: ${maxRetries}`);
  logDebug(`üìä [MAIN] Progress handler: ${progressHandler ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}`);
  
  try {
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ HTML —Ñ–∞–π–ª—ã (—Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 10%)
    if (Math.random() < 0.1) {
      logDebug(`üßπ [MAIN] –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö HTML —Ñ–∞–π–ª–æ–≤...`);
      try {
        await cleanupOldHtmlFiles(7); // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
        logDebug(`‚úÖ [MAIN] –û—á–∏—Å—Ç–∫–∞ HTML —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
      } catch (error) {
        logDebug(`‚ùå [MAIN] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–∞—Ä—ã—Ö HTML —Ñ–∞–π–ª–æ–≤: ${error.message}`);
      }
    } else {
      logDebug(`‚è≠Ô∏è [MAIN] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É HTML —Ñ–∞–π–ª–æ–≤ (–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å 10%)`);
    }
    
    // Notify about starting without proxy
    if (progressHandler) {
      logDebug(`üì¢ [MAIN] –£–≤–µ–¥–æ–º–ª—è–µ–º progress handler –æ –Ω–∞—á–∞–ª–µ –ø–æ–ø—ã—Ç–∫–∏ #1`);
      progressHandler.onAttemptStart(1);
    }
    
    logDebug(`üÜì [MAIN] –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ë–ï–ó –ø—Ä–æ–∫—Å–∏`);
    logDebug(`üîÑ [MAIN] –í—ã–∑—ã–≤–∞–µ–º attemptScrape(${link}, null, 1)...`);
    
    const result = await attemptScrape(link, null, 1);
    
    logDebug(`üìù [MAIN] –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏: success=${result.success}, protectionDetected=${result.protectionDetected}`);
    if (result.error) {
      logDebug(`‚ùå [MAIN] –û—à–∏–±–∫–∞: ${result.error}`);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    logDebug(`‚è∞ [MAIN] –ó–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏...`);
    await new Promise(resolve => setTimeout(resolve, 2000));
    logDebug(`‚úÖ [MAIN] –ó–∞–¥–µ—Ä–∂–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
    
    if (result.success) {
      logDebug(`üéâ [MAIN] –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö...`);
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
      if (isDataQualityGood(result.data)) {
        logDebug('‚úÖ [MAIN] –î–∞–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞—á–µ—Å—Ç–≤–∞');
        return result;
      } else {
        logDebug('‚ùå [MAIN] –î–∞–Ω–Ω—ã–µ –±–µ–∑ –ø—Ä–æ–∫—Å–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞—á–µ—Å—Ç–≤–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–∫—Å–∏');
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º —Å –ø—Ä–æ–∫—Å–∏
      }
    } else {
      logDebug(`üí• [MAIN] –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ—É—Å–ø–µ—à–Ω–∞`);
    }
    
  } catch (mainError) {
    logDebug(`üö® [MAIN] –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ scrapeWithProxySupport: ${mainError.message}`);
    logDebug(`üîç [MAIN] Stack trace: ${mainError.stack}`);
    throw mainError;
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–∫—Å–∏ –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –ò–õ–ò –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ
  const needsProxy = result.protectionDetected || 
                     (result.success && !isDataQualityGood(result.data)) ||
                     !result.success;
  
  if (needsProxy) {
    // Notify about protection detection
    if (progressHandler) {
      progressHandler.onProtectionDetected();
    }
    
    if (result.protectionDetected) {
      logDebug('Protection detected, switching to proxy mode');
    } else if (result.success) {
      logDebug('Low quality data detected, switching to proxy mode');
    } else {
      logDebug('Scraping failed, switching to proxy mode');
    }
    
    if (proxies.length === 0) {
      await fetchProxies();
    }
    
    if (proxies.length === 0) {
      logDebug('No proxies available from API');
      return { success: false, error: 'No proxies available' };
    }
    
    for (let attempt = 0; attempt < 10; attempt++) {
      const proxy = await getNextWorkingProxy();
      
      if (!proxy) {
        logDebug('No working proxies available');
        return { success: false, error: 'No working proxies available' };
      }
      
      // Notify about proxy usage
      if (progressHandler) {
        progressHandler.onUsingProxy(proxy);
        progressHandler.onAttemptStart(attempt + 2); // +2 because first attempt is without proxy
      }
      
      const proxyWorks = await testProxy(proxy);
      if (!proxyWorks) {
        logDebug(`Proxy ${proxy.host}:${proxy.port} failed test, trying next`);
        continue;
      }
      
      logDebug(`üîÑ Attempting scrape with proxy ${proxy.host}:${proxy.port} (attempt ${attempt + 1}/${maxRetries})`);
      
      // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 500));
      
      // Notify extraction is beginning
      if (progressHandler) {
        progressHandler.onExtracting();
      }
      
      const proxyResult = await attemptScrape(link, proxy, attempt + 2);
      
      if (proxyResult.success) {
        logDebug('Successfully scraped with proxy');
        return proxyResult;
      }
      
      if (proxyResult.protectionDetected) {
        logDebug('üõ°Ô∏è Protection/error page still detected with this proxy, trying next proxy');
        markProxyAsFailed(proxy);
        continue; // –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏
      } else {
        logDebug(`‚ùå Failed with proxy but not due to protection: ${proxyResult.error}`);
        
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏
        if (proxyResult.error && (
            proxyResult.error.includes('—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–∞—á–µ—Å—Ç–≤–∞') ||
            proxyResult.error.includes('Could not find product name') ||
            proxyResult.error.includes('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞')
        )) {
          logDebug('üîÑ –î–∞–Ω–Ω—ã–µ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏');
          continue; // –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏ –≤–º–µ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—à–∏–±–∫–∏
        }
        
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ - –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏
        if (proxyResult.error && (
            proxyResult.error.includes('timeout') ||
            proxyResult.error.includes('Navigation timeout') ||
            proxyResult.error.includes('Timeout')
        )) {
          logDebug('‚è∞ –¢–∞–π–º–∞—É—Ç —Å —Ç–µ–∫—É—â–∏–º –ø—Ä–æ–∫—Å–∏, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π');
          markProxyAsFailed(proxy);
          continue; // –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Å–∏
        }
        
        // –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ (—Å–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ç.–¥.) –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        logDebug('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –∑–∞—â–∏—Ç–æ–π –∏–ª–∏ –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö');
        return proxyResult;
      }
    }
    
    return { success: false, error: 'All proxy attempts failed' };
           }
         
         // –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ NUXT –¥–∞–Ω–Ω—ã—Ö
         if (!result.image) {
           const rawDataStr = JSON.stringify(productData);
           // –ò—â–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
           const imagePatterns = [
             /https?:\/\/[^"]*\.(?:jpg|jpeg|png|webp)/gi,
             /"(\/[^"]*\.(?:jpg|jpeg|png|webp))"/gi,
           ];
           
           for (const pattern of imagePatterns) {
             const matches = rawDataStr.match(pattern);
             if (matches && matches[0]) {
               let imageUrl = matches[0].replace(/"/g, ''); // –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏
               
               // –ï—Å–ª–∏ URL –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –¥–µ–ª–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–º
               if (imageUrl.startsWith('/')) {
                 imageUrl = 'https://cdn.vseinstrumenti.ru' + imageUrl;
               }
               
               result.image = imageUrl;
               break;
             }
           }
         }
         
         return result;
}

// Function to extract product data from window.__NUXT__ object (main method)
const extractFromNuxt = async (page) => {
  try {
    const nuxtData = await page.evaluate(() => {
      try {
        if (!window.__NUXT__ || !window.__NUXT__.data || !window.__NUXT__.data[0]) {
          return { success: false, error: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ window.__NUXT__' };
        }
        
        const productData = window.__NUXT__.data[0].product;
        
        if (!productData) {
          return { success: false, error: '–ù–µ—Ç product –≤ –¥–∞–Ω–Ω—ã—Ö' };
        }
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –æ–±—ä–µ–∫—Ç–∞
        const result = {
          success: true,
          name: productData.name || null,
          code: productData.code || null,
          price: null,
          brand: productData.brand?.name || null,
          availability: productData.availability?.atWarehouse || null,
          advantages: productData.advantages || null,
          characteristics: productData.characteristics || [],
          analogsCount: productData.analogsCount || null,
          image: null, // –ë—É–¥–µ–º –∏—Å–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
          rawData: JSON.stringify(productData).substring(0, 200) + '...'
        };
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Ü–µ–Ω—É –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç
        if (productData.bestPrice) {
          if (typeof productData.bestPrice === 'object') {
            result.price = productData.bestPrice.currentPrice || productData.bestPrice.averagePrice;
          } else if (typeof productData.bestPrice === 'string' || typeof productData.bestPrice === 'number') {
            result.price = productData.bestPrice;
          }
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Ü–µ–Ω—ã –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
        if (!result.price && productData.price) {
          result.price = productData.price;
        }
        
        if (!result.price && productData.currentPrice) {
          result.price = productData.currentPrice;
        }
        
        // –ü–æ–∏—Å–∫ —Ü–µ–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
        if (!result.price && productData.advantages) {
          const priceMatch = productData.advantages.match(/(\d+)\s*‚ÇΩ/);
          if (priceMatch) {
            result.price = parseInt(priceMatch[1]);
          }
        }
        
        // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ü–µ–Ω—É –≤ —Å—ã—Ä–æ–º JSON –¥–∞–Ω–Ω—ã—Ö
        if (!result.price) {
          const rawDataStr = JSON.stringify(productData);
          // –ò—â–µ–º —á–∏—Å–ª–∞ —Ä—è–¥–æ–º —Å —Ü–µ–Ω–æ–≤—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏
          const pricePatterns = [
            /currentPrice[":]*\s*(\d+)/,
            /price[":]*\s*(\d+)/,
            /(\d{4,5})\s*‚ÇΩ/, // 4-5 —Ü–∏—Ñ—Ä –∏ —Ä—É–±–ª—å
            /"(\d{4,5})".*‚ÇΩ/, // —Ü–∏—Ñ—Ä—ã –≤ –∫–∞–≤—ã—á–∫–∞—Ö —Ä—è–¥–æ–º —Å —Ä—É–±–ª–µ–º
            /(?:^|[,\[\s])(\d{4,5})(?=[,\]\s]|$)/, // –ß–∏—Å–ª–∞ 4-5 —Ü–∏—Ñ—Ä –≤ –º–∞—Å—Å–∏–≤–µ/–æ–±—ä–µ–∫—Ç–µ
          ];
          
          for (const pattern of pricePatterns) {
            const match = rawDataStr.match(pattern);
            if (match && match[1]) {
              const foundPrice = parseInt(match[1]);
              if (foundPrice > 100 && foundPrice < 1000000) { // –†–∞–∑—É–º–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã —Ü–µ–Ω—ã
                result.price = foundPrice;
                break;
              }
            }
          }
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –≤—Å–µ—Ö —á–∏—Å–µ–ª –≤ –¥–∞–Ω–Ω—ã—Ö
        if (!result.price) {
          // –ò—â–µ–º –≤—Å–µ —á–∏—Å–ª–∞ 4-5 —Ü–∏—Ñ—Ä –≤ –¥–∞–Ω–Ω—ã—Ö
          const rawDataStr = JSON.stringify(productData); // –û–±—ä—è–≤–ª—è–µ–º –∑–¥–µ—Å—å —Ç–æ–∂–µ
          const allNumbers = rawDataStr.match(/\b(\d{4,5})\b/g);
          if (allNumbers) {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —á–∏—Å–ª–∞ –≤ —Ä–∞–∑—É–º–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ü–µ–Ω
            const priceCandidate = allNumbers
              .map(n => parseInt(n))
              .filter(n => n >= 1000 && n <= 100000) // –¶–µ–Ω—ã –æ—Ç 1000 –¥–æ 100000 —Ä—É–±–ª–µ–π
              .find(n => n.toString().endsWith('90') || n.toString().endsWith('99') || n.toString().endsWith('00')); // –¢–∏–ø–∏—á–Ω—ã–µ —Ü–µ–Ω—ã
            
            if (priceCandidate) {
              result.price = priceCandidate;
            }
          }
        }
        
        return result;
        
      } catch (error) {
        return { success: false, error: error.message };
      }
    });
    
    return nuxtData;
  } catch (error) {
    return { success: false, error: `–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è NUXT –¥–∞–Ω–Ω—ã—Ö: ${error.message}` };
  }
};

// Export the handler for the API route
export default async function handler(req, res) {
  if (req.method === 'GET') {
    return res.status(200).json({ message: 'Link processing API is operational' });
  }

  if (req.method === 'POST') {
    try {
      const { link } = req.body;

      if (!link) {
        return res.status(400).json({ error: 'No link provided' });
      }

      let url;
      try {
        url = new URL(link);
      } catch (e) {
        return res.status(400).json({ error: 'Invalid URL format' });
      }

      const result = await scrapeWithProxySupport(link);
      
      if (result.success) {
        return res.status(200).json({
          success: true,
          data: result.data
        });
      } else {
        return res.status(500).json({ 
          success: false, 
          error: result.error || 'Failed to process the link' 
        });
      }
    } catch (error) {
      console.error('Error processing link:', error);
      return res.status(500).json({ 
        success: false, 
        error: error.message || 'Failed to process the link' 
      });
    }
  }

  return res.status(405).json({ error: 'Method not allowed' });
      }
      