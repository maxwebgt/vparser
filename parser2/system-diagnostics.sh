#!/usr/bin/env bash

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø–∞—Ä—Å–µ—Ä–∞

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

TOTAL_CHECKS=0
PASSED_CHECKS=0
WARNING_CHECKS=0
FAILED_CHECKS=0
CRITICAL_ISSUES=()
WARNINGS=()
RECOMMENDATIONS=()

log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%H:%M:%S')
    
    case $level in
        "INFO")
            echo -e "${CYAN}[${timestamp}]${NC} ${WHITE}‚ÑπÔ∏è  ${message}${NC}"
            ;;
        "SUCCESS")
            echo -e "${CYAN}[${timestamp}]${NC} ${GREEN}‚úÖ ${message}${NC}"
            ((PASSED_CHECKS++))
            ;;
        "WARNING")
            echo -e "${CYAN}[${timestamp}]${NC} ${YELLOW}‚ö†Ô∏è  ${message}${NC}"
            WARNINGS+=("$message")
            ((WARNING_CHECKS++))
            ;;
        "ERROR")
            echo -e "${CYAN}[${timestamp}]${NC} ${RED}‚ùå ${message}${NC}"
            CRITICAL_ISSUES+=("$message")
            ((FAILED_CHECKS++))
            ;;
        "HEADER")
            echo ""
            echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
            echo -e "${WHITE}üîç ${message}${NC}"
            echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
            ;;
        "SUBHEADER")
            echo ""
            echo -e "${BLUE}üìã ${message}${NC}"
            echo -e "${BLUE}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
            ;;
    esac
    ((TOTAL_CHECKS++))
}

add_recommendation() {
    RECOMMENDATIONS+=("$1")
}

check_system() {
    log "HEADER" "–°–ò–°–¢–ï–ú–ê"
    
    log "INFO" "–û–°: $(uname -s) $(uname -r)"
    
    if [ -f /etc/os-release ]; then
        source /etc/os-release
        log "INFO" "–î–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: ${PRETTY_NAME:-$ID}"
    fi
    
    ARCH=$(uname -m)
    if [[ "$ARCH" == "x86_64" ]]; then
        log "SUCCESS" "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ x86_64"
    else
        log "ERROR" "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ $ARCH –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
    fi
}

check_resources() {
    log "HEADER" "–†–ï–°–£–†–°–´"
    
    CPU_CORES=$(nproc)
    log "INFO" "CPU: ${CPU_CORES} —è–¥–µ—Ä"
    
    if [ "$CPU_CORES" -ge 2 ]; then
        log "SUCCESS" "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ CPU —è–¥–µ—Ä"
    else
        log "WARNING" "–ú–∞–ª–æ CPU —è–¥–µ—Ä"
    fi
    
    MEM_TOTAL_MB=$(free -m | awk 'NR==2{print $2}')
    log "INFO" "RAM: ${MEM_TOTAL_MB}MB"
    
    if [ "$MEM_TOTAL_MB" -ge 1024 ]; then
        log "SUCCESS" "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏"
    else
        log "ERROR" "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏"
        add_recommendation "–£–≤–µ–ª–∏—á—å—Ç–µ RAM –¥–æ –º–∏–Ω–∏–º—É–º 1GB"
    fi
    
    DISK_FREE=$(df / | awk 'NR==2 {print $4}')
    if [ "$DISK_FREE" -gt 1048576 ]; then
        log "SUCCESS" "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    else
        log "WARNING" "–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    fi
}

check_network() {
    log "HEADER" "–°–ï–¢–¨"
    
    if ping -c 1 -W 2 8.8.8.8 >/dev/null 2>&1; then
        log "SUCCESS" "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log "ERROR" "–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞"
    fi
    
    if nslookup google.com >/dev/null 2>&1; then
        log "SUCCESS" "DNS —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log "ERROR" "DNS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
}

check_docker() {
    log "HEADER" "DOCKER"
    
    if command -v docker >/dev/null 2>&1; then
        log "SUCCESS" "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        if docker ps >/dev/null 2>&1; then
            log "SUCCESS" "Docker –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            log "WARNING" "Docker —Ç—Ä–µ–±—É–µ—Ç sudo"
        fi
    else
        log "ERROR" "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker"
    fi
}

check_dbus() {
    log "HEADER" "D-BUS –°–ò–°–¢–ï–ú–ê"
    
    if command -v dbus-send >/dev/null 2>&1; then
        log "SUCCESS" "D-Bus —É—Ç–∏–ª–∏—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log "ERROR" "D-Bus —É—Ç–∏–ª–∏—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ D-Bus: apt-get install dbus"
        return
    fi
    
    log "SUBHEADER" "System D-Bus"
    if systemctl is-active dbus >/dev/null 2>&1; then
        log "SUCCESS" "System D-Bus service –∞–∫—Ç–∏–≤–µ–Ω"
    elif pgrep -f "dbus-daemon.*system" >/dev/null 2>&1; then
        log "SUCCESS" "System D-Bus daemon –∑–∞–ø—É—â–µ–Ω"
    else
        log "ERROR" "System D-Bus –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        add_recommendation "–ó–∞–ø—É—Å—Ç–∏—Ç–µ system D-Bus: systemctl start dbus"
    fi
    
    if dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames >/dev/null 2>&1; then
        log "SUCCESS" "System D-Bus —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log "ERROR" "System D-Bus —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    log "SUBHEADER" "UPower (Power Management)"
    if command -v upowerd >/dev/null 2>&1; then
        log "SUCCESS" "UPower —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        if pgrep upowerd >/dev/null 2>&1; then
            log "SUCCESS" "UPower daemon –∑–∞–ø—É—â–µ–Ω"
        else
            log "WARNING" "UPower daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    else
        log "ERROR" "UPower –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ UPower: apt-get install upower"
    fi
}

check_x11() {
    log "HEADER" "X11/XVFB"
    
    if command -v Xvfb >/dev/null 2>&1; then
        log "SUCCESS" "Xvfb —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(which Xvfb)"
    else
        log "ERROR" "Xvfb –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Xvfb: apt-get install xvfb"
        return
    fi
    
    log "SUBHEADER" "–¢–µ—Å—Ç Xvfb"
    if timeout 10 bash -c 'Xvfb :99 -screen 0 1280x1024x24 >/dev/null 2>&1 &
    XVFB_PID=$!
    sleep 2
    if kill -0 $XVFB_PID 2>/dev/null; then
        kill $XVFB_PID 2>/dev/null
        rm -f /tmp/.X99-lock 2>/dev/null
        exit 0
    else
        exit 1
    fi'; then
        log "SUCCESS" "Xvfb —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    else
        log "ERROR" "Xvfb –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
    fi
}

check_chrome() {
    log "HEADER" "CHROME/BROWSER"
    
    CHROME_PATHS=(
        "/usr/bin/google-chrome-stable"
        "/usr/bin/google-chrome"
        "/usr/bin/chromium-browser"
        "/usr/bin/chromium"
    )
    
    CHROME_FOUND=false
    for chrome_path in "${CHROME_PATHS[@]}"; do
        if [ -x "$chrome_path" ]; then
            log "SUCCESS" "Chrome –Ω–∞–π–¥–µ–Ω: $chrome_path"
            CHROME_FOUND=true
            
            CHROME_VERSION=$($chrome_path --version 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            log "INFO" "–í–µ—Ä—Å–∏—è: $CHROME_VERSION"
            break
        fi
    done
    
    if [ "$CHROME_FOUND" = false ]; then
        log "ERROR" "Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Chrome"
        return
    fi
    
    log "SUBHEADER" "–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ Chrome"
    if timeout 10 $chrome_path --headless --disable-gpu --no-sandbox --disable-dev-shm-usage --dump-dom about:blank >/dev/null 2>&1; then
        log "SUCCESS" "Chrome –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ headless —Ä–µ–∂–∏–º–µ"
    else
        log "ERROR" "Chrome –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ headless —Ä–µ–∂–∏–º–µ"
        add_recommendation "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Chrome"
    fi
}

check_nodejs() {
    log "HEADER" "NODE.JS –û–ö–†–£–ñ–ï–ù–ò–ï"
    
    if command -v node >/dev/null 2>&1; then
        NODE_VERSION=$(node --version)
        log "SUCCESS" "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
        
        NODE_MAJOR=$(echo $NODE_VERSION | cut -d'.' -f1 | sed 's/v//')
        if [ "$NODE_MAJOR" -ge 18 ]; then
            log "SUCCESS" "–í–µ—Ä—Å–∏—è Node.js —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å Puppeteer"
        else
            log "WARNING" "–°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è Node.js (—Ç—Ä–µ–±—É–µ—Ç—Å—è 18+)"
            add_recommendation "–û–±–Ω–æ–≤–∏—Ç–µ Node.js –¥–æ –≤–µ—Ä—Å–∏–∏ 18+"
        fi
    else
        log "ERROR" "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        add_recommendation "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js"
    fi
    
    if command -v npm >/dev/null 2>&1; then
        NPM_VERSION=$(npm --version)
        log "SUCCESS" "NPM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NPM_VERSION"
    else
        log "WARNING" "NPM –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

check_mongodb() {
    log "HEADER" "MONGODB"
    
    MONGO_HOST=${MONGO_HOST:-"mongo_db"}
    MONGO_PORT=${MONGO_PORT:-"27017"}
    
    if timeout 3 bash -c "</dev/tcp/$MONGO_HOST/$MONGO_PORT" 2>/dev/null; then
        log "SUCCESS" "MongoDB –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $MONGO_HOST:$MONGO_PORT"
    else
        log "ERROR" "MongoDB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        add_recommendation "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ MongoDB –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ MONGO_HOST"
    fi
}

generate_final_report() {
    log "HEADER" "–§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
    
    echo ""
    echo -e "${WHITE}üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–í–ï–†–û–ö:${NC}"
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${PASSED_CHECKS}${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${WARNING_CHECKS}${NC}"
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∏: ${FAILED_CHECKS}${NC}"
    echo -e "${CYAN}üìã –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${TOTAL_CHECKS}${NC}"
    
    if [ ${#CRITICAL_ISSUES[@]} -gt 0 ]; then
        echo ""
        echo -e "${RED}üî• –ö–†–ò–¢–ò–ß–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:${NC}"
        for issue in "${CRITICAL_ISSUES[@]}"; do
            echo -e "${RED}   ‚Ä¢ $issue${NC}"
        done
    fi
    
    if [ ${#WARNINGS[@]} -gt 0 ]; then
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:${NC}"
        for warning in "${WARNINGS[@]}"; do
            echo -e "${YELLOW}   ‚Ä¢ $warning${NC}"
        done
    fi
    
    if [ ${#RECOMMENDATIONS[@]} -gt 0 ]; then
        echo ""
        echo -e "${BLUE}üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:${NC}"
        for recommendation in "${RECOMMENDATIONS[@]}"; do
            echo -e "${BLUE}   ‚Ä¢ $recommendation${NC}"
        done
    fi
    
    echo ""
    READINESS_SCORE=$((PASSED_CHECKS * 100 / TOTAL_CHECKS))
    
    if [ $READINESS_SCORE -ge 90 ]; then
        echo -e "${GREEN}üéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê (${READINESS_SCORE}%): –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–∞—Ä—Å–µ—Ä!${NC}"
    elif [ $READINESS_SCORE -ge 70 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –°–ò–°–¢–ï–ú–ê –ß–ê–°–¢–ò–ß–ù–û –ì–û–¢–û–í–ê (${READINESS_SCORE}%): –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è${NC}"
    else
        echo -e "${RED}‚ùå –°–ò–°–¢–ï–ú–ê –ù–ï –ì–û–¢–û–í–ê (${READINESS_SCORE}%): –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã${NC}"
    fi
    
    echo ""
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${WHITE}üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ $(date)${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

main() {
    clear
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë${NC} ${WHITE}üöÄ –ú–û–©–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –î–õ–Ø –ü–ê–†–°–ï–†–ê${NC} ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${NC} ${CYAN}–í–µ—Ä—Å–∏—è: 1.0 | –ê–≤—Ç–æ—Ä: AI Assistant${NC}                ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    
    log "INFO" "üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã..."
    
    if [[ $EUID -eq 0 ]]; then
        log "INFO" "–ó–∞–ø—É—â–µ–Ω–æ –æ—Ç root - –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
    else
        log "WARNING" "–ó–∞–ø—É—â–µ–Ω–æ –ù–ï –æ—Ç root - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        add_recommendation "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: sudo $0"
    fi
    
    check_system
    check_resources
    check_network
    check_docker
    check_dbus
    check_x11
    check_chrome
    check_nodejs
    check_mongodb
    
    generate_final_report
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º bc –±–µ–∑ –∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ - —ç—Ç–æ –ù–ï –∫—Ä–∏—Ç–∏—á–Ω–æ
if ! command -v bc >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  bc –Ω–µ –Ω–∞–π–¥–µ–Ω - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å"
fi

main "$@" 