import puppeteer from 'puppeteer';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function diagnosePageLoading() {
  console.log('\nüîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò –°–¢–†–ê–ù–ò–¶–´ ===\n');
  console.log(`üìç –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}`);
  console.log(`üìç Node –≤–µ—Ä—Å–∏—è: ${process.version}`);
  console.log(`üìç –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: UID=${process.getuid ? process.getuid() : 'N/A'}`);
  console.log(`üìç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:`);
  console.log(`   DISPLAY: ${process.env.DISPLAY || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  console.log(`   DBUS_SESSION_BUS_ADDRESS: ${process.env.DBUS_SESSION_BUS_ADDRESS || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  console.log(`   XDG_RUNTIME_DIR: ${process.env.XDG_RUNTIME_DIR || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`);
  
  const testUrl = 'https://www.vseinstrumenti.ru/product/diskovaya-pila-ryobi-one-r18cs-0-5133002338-727792/';
  
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  const minimalArgs = [
    '--no-sandbox',
    '--disable-setuid-sandbox',
    '--disable-dev-shm-usage',
    '--disable-gpu',
    '--window-size=1920,1080'
  ];
  
  // –ù–∞—Ö–æ–¥–∏–º –±—Ä–∞—É–∑–µ—Ä
  let executablePath;
  if (process.platform === 'linux') {
    const paths = ['/usr/lib/chromium/chromium', '/usr/bin/chromium'];
    for (const p of paths) {
      if (fs.existsSync(p)) {
        executablePath = p;
        break;
      }
    }
  }
  
  console.log(`\nüåê –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...`);
  console.log(`üìç –ü—É—Ç—å –∫ –±—Ä–∞—É–∑–µ—Ä—É: ${executablePath || '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π'}`);
  
  const browser = await puppeteer.launch({
    headless: 'new',
    executablePath,
    args: minimalArgs,
    dumpio: true // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –ª–æ–≥–∏ –±—Ä–∞—É–∑–µ—Ä–∞
  });
  
  console.log(`‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω\n`);
  
  try {
    const page = await browser.newPage();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º user agent
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36');
    
    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    page.on('console', msg => {
      console.log(`üñ•Ô∏è [Browser Console ${msg.type()}]: ${msg.text()}`);
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page.on('pageerror', error => {
      console.log(`‚ùå [Page Error]: ${error.message}`);
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã
    let requestCount = 0;
    page.on('request', request => {
      requestCount++;
      if (requestCount <= 10) { // –ü–µ—Ä–≤—ã–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤
        console.log(`üì§ [Request ${requestCount}]: ${request.method()} ${request.url().substring(0, 100)}...`);
      }
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã
    let responseCount = 0;
    page.on('response', response => {
      responseCount++;
      if (responseCount <= 10) { // –ü–µ—Ä–≤—ã–µ 10 –æ—Ç–≤–µ—Ç–æ–≤
        console.log(`üì• [Response ${responseCount}]: ${response.status()} ${response.url().substring(0, 100)}...`);
      }
    });
    
    console.log(`\nüîó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞: ${testUrl}\n`);
    
    const startTime = Date.now();
    const response = await page.goto(testUrl, {
      waitUntil: 'domcontentloaded',
      timeout: 30000
    });
    
    const loadTime = Date.now() - startTime;
    console.log(`\n‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}ms`);
    console.log(`üìä HTTP —Å—Ç–∞—Ç—É—Å: ${response.status()}`);
    
    // –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log(`\nüîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–¢–†–ê–ù–ò–¶–´ ===\n`);
    
    const diagnostics = await page.evaluate(() => {
      const data = {};
      
      // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      data.title = document.title;
      data.url = window.location.href;
      data.readyState = document.readyState;
      
      // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      data.htmlLength = document.documentElement.outerHTML.length;
      data.bodyText = document.body ? document.body.innerText.substring(0, 200) : 'NO BODY';
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ JavaScript
      data.jsEnabled = true; // –ï—Å–ª–∏ —ç—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, JS —Ä–∞–±–æ—Ç–∞–µ—Ç
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      data.h1Element = document.querySelector('h1') ? document.querySelector('h1').innerText : 'NO H1';
      data.hasProductTitle = !!document.querySelector('h1[data-qa="get-product-title"]');
      data.priceElement = document.querySelector('[data-qa="price-now"]') ? 
        document.querySelector('[data-qa="price-now"]').innerText : 'NO PRICE';
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
      data.scriptCount = document.querySelectorAll('script').length;
      data.externalScripts = Array.from(document.querySelectorAll('script[src]'))
        .slice(0, 5)
        .map(s => s.src);
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π
      data.styleSheetCount = document.styleSheets.length;
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ cookies
      data.cookies = document.cookie.substring(0, 100);
      
      return data;
    });
    
    console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: "${diagnostics.title}"`);
    console.log(`üîó –§–∏–Ω–∞–ª—å–Ω—ã–π URL: ${diagnostics.url}`);
    console.log(`üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${diagnostics.readyState}`);
    console.log(`üìè –†–∞–∑–º–µ—Ä HTML: ${(diagnostics.htmlLength / 1024).toFixed(2)} KB`);
    console.log(`‚úÖ JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç: ${diagnostics.jsEnabled ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`\nüìù –ù–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:\n${diagnostics.bodyText}\n`);
    console.log(`üè∑Ô∏è H1 —ç–ª–µ–º–µ–Ω—Ç: "${diagnostics.h1Element}"`);
    console.log(`üõí –ï—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–≤–∞—Ä–∞: ${diagnostics.hasProductTitle ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`üí∞ –¶–µ–Ω–∞: "${diagnostics.priceElement}"`);
    console.log(`üìú –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫—Ä–∏–ø—Ç–æ–≤: ${diagnostics.scriptCount}`);
    console.log(`üé® –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–ª–µ–π: ${diagnostics.styleSheetCount}`);
    console.log(`üç™ Cookies: ${diagnostics.cookies || '–ù–ï–¢'}`);
    
    if (diagnostics.externalScripts.length > 0) {
      console.log(`\nüì¶ –í–Ω–µ—à–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç—ã (–ø–µ—Ä–≤—ã–µ 5):`);
      diagnostics.externalScripts.forEach((src, i) => {
        console.log(`   ${i + 1}. ${src}`);
      });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const html = await page.content();
    const filename = `debug-page-${process.platform}-${Date.now()}.html`;
    fs.writeFileSync(path.join(__dirname, filename), html);
    console.log(`\nüíæ HTML —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: ${filename}`);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    const screenshotName = `debug-screenshot-${process.platform}-${Date.now()}.png`;
    await page.screenshot({ 
      path: path.join(__dirname, screenshotName),
      fullPage: true 
    });
    console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: ${screenshotName}`);
    
  } catch (error) {
    console.error(`\n‚ùå –û–®–ò–ë–ö–ê: ${error.message}`);
    console.error(error.stack);
  } finally {
    await browser.close();
    console.log(`\n‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
diagnosePageLoading().catch(console.error); 