#!/usr/bin/env node

import fs from 'fs';

console.log('\nüîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø ===\n');

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
console.log('üìä –°–∏—Å—Ç–µ–º–∞:');
console.log(`  –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${process.platform}`);
console.log(`  Node.js: ${process.version}`);
console.log(`  UID: ${process.getuid ? process.getuid() : 'N/A'}`);
console.log(`  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${process.env.USER || process.env.USERNAME || 'unknown'}`);
console.log(`  –î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${process.env.HOME || 'unknown'}`);

// –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
console.log('\nüîë –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
const xdgRuntime = process.env.XDG_RUNTIME_DIR;
const dbusSession = process.env.DBUS_SESSION_BUS_ADDRESS;

console.log(`  XDG_RUNTIME_DIR: ${xdgRuntime || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}`);
console.log(`  DBUS_SESSION_BUS_ADDRESS: ${dbusSession || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê'}`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
if (xdgRuntime && process.getuid) {
  const uid = process.getuid();
  const expectedDir = `/run/user/${uid}`;
  
  if (xdgRuntime === expectedDir) {
    console.log(`  ‚úÖ XDG_RUNTIME_DIR –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç UID ${uid})`);
  } else {
    console.log(`  ‚ùå XDG_RUNTIME_DIR –ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø!`);
    console.log(`     –û–∂–∏–¥–∞–µ—Ç—Å—è: ${expectedDir}`);
    console.log(`     –¢–µ–∫—É—â–∞—è: ${xdgRuntime}`);
    
    // –ü–∞—Ä—Å–∏–º UID –∏–∑ –ø—É—Ç–∏
    const match = xdgRuntime.match(/\/run\/user\/(\d+)/);
    if (match) {
      const pathUid = match[1];
      console.log(`     ‚ö†Ô∏è –ü—É—Ç—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ UID ${pathUid}, –∞ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω –æ—Ç UID ${uid}`);
    }
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
console.log('\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:');

if (xdgRuntime) {
  try {
    const stats = fs.statSync(xdgRuntime);
    console.log(`  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${xdgRuntime}:`);
    console.log(`    –°—É—â–µ—Å—Ç–≤—É–µ—Ç: ‚úÖ`);
    console.log(`    –í–ª–∞–¥–µ–ª–µ—Ü UID: ${stats.uid}`);
    console.log(`    –ü—Ä–∞–≤–∞: ${(stats.mode & parseInt('777', 8)).toString(8)}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º D-Bus —Å–æ–∫–µ—Ç
    const dbusPath = `${xdgRuntime}/bus`;
    try {
      const busStats = fs.statSync(dbusPath);
      console.log(`  D-Bus —Å–æ–∫–µ—Ç ${dbusPath}:`);
      console.log(`    –°—É—â–µ—Å—Ç–≤—É–µ—Ç: ‚úÖ`);
      console.log(`    –¢–∏–ø: ${busStats.isSocket() ? '—Å–æ–∫–µ—Ç' : '–ù–ï —Å–æ–∫–µ—Ç!'}`);
    } catch (e) {
      console.log(`  D-Bus —Å–æ–∫–µ—Ç ${dbusPath}: ‚ùå –ù–ï –ù–ê–ô–î–ï–ù`);
    }
  } catch (e) {
    console.log(`  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${xdgRuntime}: ‚ùå –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢ –∏–ª–∏ –ù–ï–¢ –î–û–°–¢–£–ü–ê`);
    console.log(`    –û—à–∏–±–∫–∞: ${e.message}`);
  }
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');

if (xdgRuntime && xdgRuntime.includes('/run/user/0') && process.getuid && process.getuid() !== 0) {
  console.log('  ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ—Ç root!');
  console.log('  üîß –†–µ—à–µ–Ω–∏–µ:');
  console.log('     1. chmod +x fix-env.sh');
  console.log('     2. source fix-env.sh');
  console.log('     3. node scraper.js');
  console.log('\n  –ò–õ–ò –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ë—Ä—Ç–∫—É:');
  console.log('     1. chmod +x run-with-fix.sh');
  console.log('     2. ./run-with-fix.sh node scraper.js');
} else if (!xdgRuntime) {
  console.log('  ‚ö†Ô∏è XDG_RUNTIME_DIR –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
  console.log('  üîß –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –ª—É—á—à–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é.');
} else {
  console.log('  ‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º');
}

console.log('\n'); 